// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2waH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8iLAoKUGxheWVySW5mbxIQCghwbGF5ZXJJZBgBIAEo",
            "BRIMCgRuYW1lGAIgASgJIjgKDFBvc2l0aW9uSW5mbxIMCgRwb3NYGAEgASgC",
            "EgwKBHBvc1kYAiABKAISDAoEcG9zWhgDIAEoAiJGCgxSb3RhdGlvbkluZm8S",
            "DAoEcm90WBgBIAEoAhIMCgRyb3RZGAIgASgCEgwKBHJvdFoYAyABKAISDAoE",
            "cm90VxgEIAEoAiJjCg1UcmFuc2Zvcm1JbmZvEigKCHBvc2l0aW9uGAEgASgL",
            "MhYuUHJvdG9jb2wuUG9zaXRpb25JbmZvEigKCHJvdGF0aW9uGAIgASgLMhYu",
            "UHJvdG9jb2wuUm90YXRpb25JbmZvIpMBCghSb29tSW5mbxIOCgZyb29tSWQY",
            "ASABKAUSDQoFdGl0bGUYAiABKAkSFAoMY3VycmVudENvdW50GAMgASgFEhAK",
            "CG1heENvdW50GAQgASgFEhEKCWlzUHJpdmF0ZRgFIAEoCBIRCglpc1BsYXlp",
            "bmcYBiABKAgSGgoScm9vbU1hc3RlclBsYXllcklkGAcgASgFIkQKCUNoZXN0",
            "SW5mbxIPCgdjaGVzdElkGAEgASgFEhIKCmNoZXN0TGV2ZWwYAiABKAUSEgoK",
            "Y2hlc3RQb2ludBgDIAEoBSKpAQoLQ2xlYW5zZUluZm8SEQoJY2xlYW5zZUlk",
            "GAEgASgFEjEKEGNsZWFuc2VUcmFuc2Zvcm0YAiABKAsyFy5Qcm90b2NvbC5U",
            "cmFuc2Zvcm1JbmZvEhQKDGNsZWFuc2VQb2ludBgDIAEoAhIeChZjbGVhbnNl",
            "RHVyYXRpb25TZWNvbmRzGAQgASgCEh4KFmNsZWFuc2VDb29sVGltZVNlY29u",
            "ZHMYBSABKAIiKwoIVmVsb2NpdHkSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkK",
            "AXoYAyABKAIiDQoLQ1NfUm9vbUxpc3QiMAoLU0NfUm9vbUxpc3QSIQoFcm9v",
            "bXMYASADKAsyEi5Qcm90b2NvbC5Sb29tSW5mbyJBCgtDU19NYWtlUm9vbRIN",
            "CgV0aXRsZRgBIAEoCRIRCglpc1ByaXZhdGUYAiABKAgSEAoIcGFzc3dvcmQY",
            "AyABKAkiQQoLU0NfTWFrZVJvb20SIAoEcm9vbRgBIAEoCzISLlByb3RvY29s",
            "LlJvb21JbmZvEhAKCHBhc3N3b3JkGAIgASgJIj4KDENTX0VudGVyUm9vbRIO",
            "CgZyb29tSWQYASABKAUSEAoIcGFzc3dvcmQYAiABKAkSDAoEbmFtZRgDIAEo",
            "CSLGAQoRU0NfQWxsb3dFbnRlclJvb20SEAoIY2FuRW50ZXIYASABKAgSEgoK",
            "bXlQbGF5ZXJJZBgCIAEoBRIgCgRyb29tGAMgASgLMhIuUHJvdG9jb2wuUm9v",
            "bUluZm8SJQoHcGxheWVycxgEIAMoCzIULlByb3RvY29sLlBsYXllckluZm8S",
            "MAoOcmVhc29uUmVqZWN0ZWQYBSABKA4yGC5Qcm90b2NvbC5SZWFzb25SZWpl",
            "Y3RlZBIQCghwYXNzd29yZBgGIAEoCSJnChZTQ19JbmZvcm1OZXdGYWNlSW5S",
            "b29tEg4KBnJvb21JZBgBIAEoBRIUCgxjdXJyZW50Q291bnQYAiABKAUSJwoJ",
            "bmV3UGxheWVyGAMgASgLMhQuUHJvdG9jb2wuUGxheWVySW5mbyIeCgxDU19M",
            "ZWF2ZVJvb20SDgoGcm9vbUlkGAEgASgFIjwKDFNDX0xlYXZlUm9vbRIQCghw",
            "bGF5ZXJJZBgBIAEoBRIaChJyb29tTWFzdGVyUGxheWVySWQYAiABKAUiQQoM",
            "Q1NfUmVhZHlSb29tEg4KBnJvb21JZBgBIAEoBRIQCghwbGF5ZXJJZBgCIAEo",
            "BRIPCgdpc1JlYWR5GAMgASgIIpwBCgxTQ19SZWFkeVJvb20SDgoGcm9vbUlk",
            "GAEgASgFEkQKD3JlYWR5UGxheWVySW5mbxgCIAMoCzIrLlByb3RvY29sLlND",
            "X1JlYWR5Um9vbS5SZWFkeVBsYXllckluZm9FbnRyeRo2ChRSZWFkeVBsYXll",
            "ckluZm9FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAg6AjgBIg0K",
            "C1NDX1BpbmdQb25nIg0KC0NTX1BpbmdQb25nIg4KDERTQ19QaW5nUG9uZyIO",
            "CgxDRFNfUGluZ1BvbmciKwoZQ1NfQ29ubmVjdERlZGljYXRlZFNlcnZlchIO",
            "CgZyb29tSWQYASABKAUiNQoZU0NfQ29ubmVjdERlZGljYXRlZFNlcnZlchIK",
            "CgJpcBgBIAEoCRIMCgRwb3J0GAIgASgFIjcKEkNEU19JbmZvcm1Sb29tSW5m",
            "bxIOCgZyb29tSWQYASABKAUSEQoJcGxheWVyTnVtGAIgASgFIjIKEkNEU19B",
            "bGxvd0VudGVyR2FtZRIOCgZyb29tSWQYASABKAUSDAoEbmFtZRgCIAEoCSL4",
            "AQoSRFNDX0FsbG93RW50ZXJHYW1lEhsKE215RGVkaWNhdGVkUGxheWVySWQY",
            "ASABKAUSJQoHcGxheWVycxgCIAMoCzIULlByb3RvY29sLlBsYXllckluZm8S",
            "TAoQcGxheWVyVHJhbnNmb3JtcxgDIAMoCzIyLlByb3RvY29sLkRTQ19BbGxv",
            "d0VudGVyR2FtZS5QbGF5ZXJUcmFuc2Zvcm1zRW50cnkaUAoVUGxheWVyVHJh",
            "bnNmb3Jtc0VudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIXLlBy",
            "b3RvY29sLlRyYW5zZm9ybUluZm86AjgBIjYKHkNEU19JbmZvcm1MZWF2ZURl",
            "ZGljYXRlZFNlcnZlchIUCgxkZWRpcGxheWVySWQYASABKAUifgoiRFNDX0lu",
            "Zm9ybU5ld0ZhY2VJbkRlZGljYXRlZFNlcnZlchInCgluZXdQbGF5ZXIYASAB",
            "KAsyFC5Qcm90b2NvbC5QbGF5ZXJJbmZvEi8KDnNwYXduVHJhbnNmb3JtGAIg",
            "ASgLMhcuUHJvdG9jb2wuVHJhbnNmb3JtSW5mbyI3Ch5EU0NfSW5mb3JtTGVh",
            "dmVEZWRpY2F0ZWRTZXJ2ZXISFQoNbGVhdmVQbGF5ZXJJZBgBIAEoBSIvCg1E",
            "U0NfU3RhcnRHYW1lEg0KBWl0ZW1zGAEgASgJEg8KB2tpbGxlcnMYAiABKAki",
            "vAEKCENEU19Nb3ZlEhQKDGRlZGlwbGF5ZXJJZBgBIAEoBRIuCg10cmFuc2Zv",
            "cm1JbmZvGAIgASgLMhcuUHJvdG9jb2wuVHJhbnNmb3JtSW5mbxIVCg1rZXli",
            "b2FyZElucHV0GAMgASgFEiQKCHZlbG9jaXR5GAQgASgLMhIuUHJvdG9jb2wu",
            "VmVsb2NpdHkSLQoJdGltZXN0YW1wGAUgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcCK8AQoIRFNDX01vdmUSFAoMZGVkaXBsYXllcklkGAEgASgF",
            "Ei4KDXRyYW5zZm9ybUluZm8YAiABKAsyFy5Qcm90b2NvbC5UcmFuc2Zvcm1J",
            "bmZvEhUKDWtleWJvYXJkSW5wdXQYAyABKAUSJAoIdmVsb2NpdHkYBCABKAsy",
            "Ei5Qcm90b2NvbC5WZWxvY2l0eRItCgl0aW1lc3RhbXAYBSABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wIicKEURTQ19EYXlUaW1lclN0YXJ0EhIK",
            "CmRheVNlY29uZHMYASABKAUiLgoQRFNDX0RheVRpbWVyU3luYxIaChJjdXJy",
            "ZW50U2VydmVyVGltZXIYASABKAIiPQoPRFNDX0RheVRpbWVyRW5kEhYKDmtp",
            "bGxlclBsYXllcklkGAEgASgFEhIKCmtpbGxlclR5cGUYAiABKAUi6QEKE0RT",
            "Q19OaWdodFRpbWVyU3RhcnQSFAoMbmlnaHRTZWNvbmRzGAEgASgFEhAKCGdh",
            "dWdlTWF4GAIgASgCEmUKHHBsYXllckdhdWdlRGVjcmVhc2VQZXJTZWNvbmQY",
            "AyADKAsyPy5Qcm90b2NvbC5EU0NfTmlnaHRUaW1lclN0YXJ0LlBsYXllckdh",
            "dWdlRGVjcmVhc2VQZXJTZWNvbmRFbnRyeRpDCiFQbGF5ZXJHYXVnZURlY3Jl",
            "YXNlUGVyU2Vjb25kRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgC",
            "OgI4ASIwChJEU0NfTmlnaHRUaW1lclN5bmMSGgoSY3VycmVudFNlcnZlclRp",
            "bWVyGAEgASgCImwKEURTQ19OaWdodFRpbWVyRW5kEigKCmRlYXRoQ2F1c2UY",
            "ASABKA4yFC5Qcm90b2NvbC5EZWF0aENhdXNlEhUKDWRlYXRoUGxheWVySWQY",
            "AiABKAUSFgoOa2lsbGVyUGxheWVySWQYAyABKAUinAEKEURTQ19OZXdDaGVz",
            "dHNJbmZvEj8KCmNoZXN0c0luZm8YASADKAsyKy5Qcm90b2NvbC5EU0NfTmV3",
            "Q2hlc3RzSW5mby5DaGVzdHNJbmZvRW50cnkaRgoPQ2hlc3RzSW5mb0VudHJ5",
            "EgsKA2tleRgBIAEoBRIiCgV2YWx1ZRgCIAEoCzITLlByb3RvY29sLkNoZXN0",
            "SW5mbzoCOAEiOwoQQ0RTX1RyeUNoZXN0T3BlbhIWCg5teURlZGlwbGF5ZXJJ",
            "ZBgBIAEoBRIPCgdjaGVzdElkGAIgASgFIl8KFERTQ19DaGVzdE9wZW5TdWNj",
            "ZXNzEg8KB2NoZXN0SWQYASABKAUSEAoIcGxheWVySWQYAiABKAUSEAoIZ2V0",
            "UG9pbnQYAyABKAUSEgoKdG90YWxQb2ludBgEIAEoBSIWChRDRFNfUmVxdWVz",
            "dFRpbWVzdGFtcCJGChVEU0NfUmVzcG9uc2VUaW1lc3RhbXASLQoJdGltZXN0",
            "YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKrAgoNRFND",
            "X0dhdWdlU3luYxI/CgxwbGF5ZXJHYXVnZXMYASADKAsyKS5Qcm90b2NvbC5E",
            "U0NfR2F1Z2VTeW5jLlBsYXllckdhdWdlc0VudHJ5El8KHHBsYXllckdhdWdl",
            "RGVjcmVhc2VQZXJTZWNvbmQYAiADKAsyOS5Qcm90b2NvbC5EU0NfR2F1Z2VT",
            "eW5jLlBsYXllckdhdWdlRGVjcmVhc2VQZXJTZWNvbmRFbnRyeRozChFQbGF5",
            "ZXJHYXVnZXNFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAI6AjgB",
            "GkMKIVBsYXllckdhdWdlRGVjcmVhc2VQZXJTZWNvbmRFbnRyeRILCgNrZXkY",
            "ASABKAUSDQoFdmFsdWUYAiABKAI6AjgBIj4KE0RTQ19OZXdDbGVhbnNlc0lu",
            "Zm8SJwoIY2xlYW5zZXMYASADKAsyFS5Qcm90b2NvbC5DbGVhbnNlSW5mbyJJ",
            "ChxDRFNfUmVxdWVzdENsZWFuc2VQZXJtaXNzaW9uEhYKDm15RGVkaXBsYXll",
            "cklkGAEgASgFEhEKCWNsZWFuc2VJZBgCIAEoBSJAChlEU0NfR2l2ZUNsZWFu",
            "c2VQZXJtaXNzaW9uEhAKCHBsYXllcklkGAEgASgFEhEKCWNsZWFuc2VJZBgC",
            "IAEoBSI8Cg9DRFNfQ2xlYW5zZVF1aXQSFgoObXlEZWRpcGxheWVySWQYASAB",
            "KAUSEQoJY2xlYW5zZUlkGAIgASgFIjYKD0RTQ19DbGVhbnNlUXVpdBIQCghw",
            "bGF5ZXJJZBgBIAEoBRIRCgljbGVhbnNlSWQYAiABKAUiPwoSQ0RTX0NsZWFu",
            "c2VTdWNjZXNzEhYKDm15RGVkaXBsYXllcklkGAEgASgFEhEKCWNsZWFuc2VJ",
            "ZBgCIAEoBSJJChJEU0NfQ2xlYW5zZVN1Y2Nlc3MSEAoIcGxheWVySWQYASAB",
            "KAUSEQoJY2xlYW5zZUlkGAIgASgFEg4KBl9nYXVnZRgDIAEoAiIuChlEU0Nf",
            "Q2xlYW5zZUNvb2x0aW1lRmluaXNoEhEKCWNsZWFuc2VJZBgBIAEoBSI8ChJD",
            "RFNfSXRlbUJ1eVJlcXVlc3QSFgoObXlEZWRpcGxheWVySWQYASABKAUSDgoG",
            "aXRlbUlkGAIgASgFInUKEURTQ19JdGVtQnV5UmVzdWx0EhAKCHBsYXllcklk",
            "GAEgASgFEg4KBml0ZW1JZBgCIAEoBRIWCg5pdGVtVG90YWxDb3VudBgDIAEo",
            "BRIRCglpc1N1Y2Nlc3MYBCABKAgSEwoLcmVtYWluTW9uZXkYBSABKAUiOAoO",
            "Q0RTX09uSG9sZEl0ZW0SFgoObXlEZWRpcGxheWVySWQYASABKAUSDgoGaXRl",
            "bUlkGAIgASgFIjIKDkRTQ19PbkhvbGRJdGVtEhAKCHBsYXllcklkGAEgASgF",
            "Eg4KBml0ZW1JZBgCIAEoBSJxCg9DRFNfVXNlRGFzaEl0ZW0SFgoObXlEZWRp",
            "cGxheWVySWQYASABKAUSDgoGaXRlbUlkGAIgASgFEjYKFWRhc2hTdGFydGlu",
            "Z1RyYW5zZm9ybRgDIAEoCzIXLlByb3RvY29sLlRyYW5zZm9ybUluZm8iawoP",
            "RFNDX1VzZURhc2hJdGVtEhAKCHBsYXllcklkGAEgASgFEg4KBml0ZW1JZBgC",
            "IAEoBRI2ChVkYXNoU3RhcnRpbmdUcmFuc2Zvcm0YAyABKAsyFy5Qcm90b2Nv",
            "bC5UcmFuc2Zvcm1JbmZvImYKD0RTQ19FbmREYXNoSXRlbRIQCghwbGF5ZXJJ",
            "ZBgBIAEoBRIOCgZpdGVtSWQYAiABKAUSMQoQZGFzaEVuZFRyYW5zZm9ybRgD",
            "IAEoCzIXLlByb3RvY29sLlRyYW5zZm9ybUluZm8ieQoTQ0RTX1VzZUZpcmV3",
            "b3JrSXRlbRIWCg5teURlZGlwbGF5ZXJJZBgBIAEoBRIOCgZpdGVtSWQYAiAB",
            "KAUSOgoZZmlyZXdvcmtTdGFydGluZ1RyYW5zZm9ybRgDIAEoCzIXLlByb3Rv",
            "Y29sLlRyYW5zZm9ybUluZm8icwoTRFNDX1VzZUZpcmV3b3JrSXRlbRIQCghw",
            "bGF5ZXJJZBgBIAEoBRIOCgZpdGVtSWQYAiABKAUSOgoZZmlyZXdvcmtTdGFy",
            "dGluZ1RyYW5zZm9ybRgDIAEoCzIXLlByb3RvY29sLlRyYW5zZm9ybUluZm8i",
            "PgoUQ0RTX1VzZUludmlzaWJsZUl0ZW0SFgoObXlEZWRpcGxheWVySWQYASAB",
            "KAUSDgoGaXRlbUlkGAIgASgFIjgKFERTQ19Vc2VJbnZpc2libGVJdGVtEhAK",
            "CHBsYXllcklkGAEgASgFEg4KBml0ZW1JZBgCIAEoBSJpCg9DRFNfVXNlVHJh",
            "cEl0ZW0SFgoObXlEZWRpcGxheWVySWQYASABKAUSDgoGaXRlbUlkGAIgASgF",
            "Ei4KDXRyYXBUcmFuc2Zvcm0YAyABKAsyFy5Qcm90b2NvbC5UcmFuc2Zvcm1J",
            "bmZvImMKD0RTQ19Vc2VUcmFwSXRlbRIQCghwbGF5ZXJJZBgBIAEoBRIOCgZp",
            "dGVtSWQYAiABKAUSLgoNdHJhcFRyYW5zZm9ybRgDIAEoCzIXLlByb3RvY29s",
            "LlRyYW5zZm9ybUluZm8iQQoVQ0RTX1VzZUhlYXJ0bGVzc1NraWxsEhYKDm15",
            "RGVkaXBsYXllcklkGAEgASgFEhAKCGtpbGxlcklkGAIgASgFIjsKFURTQ19V",
            "c2VIZWFydGxlc3NTa2lsbBIQCghwbGF5ZXJJZBgBIAEoBRIQCghraWxsZXJJ",
            "ZBgCIAEoBSJbChRDRFNfVXNlRGV0ZWN0b3JTa2lsbBIWCg5teURlZGlwbGF5",
            "ZXJJZBgBIAEoBRIQCghraWxsZXJJZBgCIAEoBRIZChFkZXRlY3RlZFBsYXll",
            "cklkcxgDIAMoBSJVChREU0NfVXNlRGV0ZWN0b3JTa2lsbBIQCghwbGF5ZXJJ",
            "ZBgBIAEoBRIQCghraWxsZXJJZBgCIAEoBRIZChFkZXRlY3RlZFBsYXllcklk",
            "cxgDIAMoBSI5CgtEU0NfRW5kR2FtZRIWCg53aW5uZXJQbGF5ZXJJZBgBIAEo",
            "BRISCgp3aW5uZXJOYW1lGAIgASgJKr0MCgVNc2dJZBIQCgxDU19ST09NX0xJ",
            "U1QQABIQCgxTQ19ST09NX0xJU1QQARIQCgxDU19NQUtFX1JPT00QAhIQCgxT",
            "Q19NQUtFX1JPT00QAxIRCg1DU19FTlRFUl9ST09NEAQSFwoTU0NfQUxMT1df",
            "RU5URVJfUk9PTRAFEh4KGlNDX0lORk9STV9ORVdfRkFDRV9JTl9ST09NEAYS",
            "EQoNQ1NfTEVBVkVfUk9PTRAHEhEKDVNDX0xFQVZFX1JPT00QCBIRCg1DU19S",
            "RUFEWV9ST09NEAkSEQoNU0NfUkVBRFlfUk9PTRAKEhAKDFNDX1BJTkdfUE9O",
            "RxALEhAKDENTX1BJTkdfUE9ORxAMEhEKDURTQ19QSU5HX1BPTkcQDRIRCg1D",
            "RFNfUElOR19QT05HEA4SHwobQ1NfQ09OTkVDVF9ERURJQ0FURURfU0VSVkVS",
            "EA8SHwobU0NfQ09OTkVDVF9ERURJQ0FURURfU0VSVkVSEBASGAoUQ0RTX0lO",
            "Rk9STV9ST09NX0lORk8QERIYChRDRFNfQUxMT1dfRU5URVJfR0FNRRASEhgK",
            "FERTQ19BTExPV19FTlRFUl9HQU1FEBMSKwonRFNDX0lORk9STV9ORVdfRkFD",
            "RV9JTl9ERURJQ0FURURfU0VSVkVSEBQSJQohQ0RTX0lORk9STV9MRUFWRV9E",
            "RURJQ0FURURfU0VSVkVSEBUSJQohRFNDX0lORk9STV9MRUFWRV9ERURJQ0FU",
            "RURfU0VSVkVSEBYSEgoORFNDX1NUQVJUX0dBTUUQFxIMCghDRFNfTU9WRRAY",
            "EgwKCERTQ19NT1ZFEBkSFwoTRFNDX0RBWV9USU1FUl9TVEFSVBAaEhYKEkRT",
            "Q19EQVlfVElNRVJfU1lOQxAbEhUKEURTQ19EQVlfVElNRVJfRU5EEBwSGQoV",
            "RFNDX05JR0hUX1RJTUVSX1NUQVJUEB0SGAoURFNDX05JR0hUX1RJTUVSX1NZ",
            "TkMQHhIXChNEU0NfTklHSFRfVElNRVJfRU5EEB8SFwoTRFNDX05FV19DSEVT",
            "VFNfSU5GTxAgEhYKEkNEU19UUllfQ0hFU1RfT1BFThAhEhoKFkRTQ19DSEVT",
            "VF9PUEVOX1NVQ0NFU1MQIhIZChVDRFNfUkVRVUVTVF9USU1FU1RBTVAQIxIa",
            "ChZEU0NfUkVTUE9OU0VfVElNRVNUQU1QECQSEgoORFNDX0dhdWdlX1N5bmMQ",
            "JRIZChVEU0NfTkVXX0NMRUFOU0VTX0lORk8QJhIiCh5DRFNfUkVRVUVTVF9D",
            "TEVBTlNFX1BFUk1JU1NJT04QJxIfChtEU0NfR0lWRV9DTEVBTlNFX1BFUk1J",
            "U1NJT04QKBIUChBDRFNfQ0xFQU5TRV9RVUlUECkSFAoQRFNDX0NMRUFOU0Vf",
            "UVVJVBAqEhcKE0NEU19DTEVBTlNFX1NVQ0NFU1MQKxIXChNEU0NfQ0xFQU5T",
            "RV9TVUNDRVNTECwSHwobRFNDX0NMRUFOU0VfQ09PTFRJTUVfRklOSVNIEC0S",
            "GAoUQ0RTX0lURU1fQlVZX1JFUVVFU1QQLhIXChNEU0NfSVRFTV9CVVlfUkVT",
            "VUxUEC8SFAoQQ0RTX09OX0hPTERfSVRFTRAwEhQKEERTQ19PTl9IT0xEX0lU",
            "RU0QMRIVChFDRFNfVVNFX0RBU0hfSVRFTRAyEhUKEURTQ19VU0VfREFTSF9J",
            "VEVNEDMSFQoRRFNDX0VORF9EQVNIX0lURU0QNBIZChVDRFNfVVNFX0ZJUkVX",
            "T1JLX0lURU0QNRIZChVEU0NfVVNFX0ZJUkVXT1JLX0lURU0QNhIaChZDRFNf",
            "VVNFX0lOVklTSUJMRV9JVEVNEDcSGgoWRFNDX1VTRV9JTlZJU0lCTEVfSVRF",
            "TRA4EhUKEUNEU19VU0VfVFJBUF9JVEVNEDsSFQoRRFNDX1VTRV9UUkFQX0lU",
            "RU0QPBIbChdDRFNfVVNFX0hFQVJUTEVTU19TS0lMTBA/EhsKF0RTQ19VU0Vf",
            "SEVBUlRMRVNTX1NLSUxMEEASGgoWQ0RTX1VTRV9ERVRFQ1RPUl9TS0lMTBBB",
            "EhoKFkRTQ19VU0VfREVURUNUT1JfU0tJTEwQQhIQCgxEU0NfRU5EX0dBTUUQ",
            "UCpbCg5SZWFzb25SZWplY3RlZBIQCgxSb29tTm90RXhpc3QQABIUChBDdXJy",
            "ZW50bHlQbGF5aW5nEAESDgoKUm9vbUlzRnVsbBACEhEKDVdyb25nUGFzc3dv",
            "cmQQAyopCgpEZWF0aENhdXNlEgwKCFRpbWVPdmVyEAASDQoJR2F1Z2VPdmVy",
            "EAFCG6oCGEdvb2dsZS5Qcm90b2J1Zi5Qcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.Protocol.MsgId), typeof(global::Google.Protobuf.Protocol.ReasonRejected), typeof(global::Google.Protobuf.Protocol.DeathCause), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PlayerInfo), global::Google.Protobuf.Protocol.PlayerInfo.Parser, new[]{ "PlayerId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PositionInfo), global::Google.Protobuf.Protocol.PositionInfo.Parser, new[]{ "PosX", "PosY", "PosZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.RotationInfo), global::Google.Protobuf.Protocol.RotationInfo.Parser, new[]{ "RotX", "RotY", "RotZ", "RotW" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.TransformInfo), global::Google.Protobuf.Protocol.TransformInfo.Parser, new[]{ "Position", "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.RoomInfo), global::Google.Protobuf.Protocol.RoomInfo.Parser, new[]{ "RoomId", "Title", "CurrentCount", "MaxCount", "IsPrivate", "IsPlaying", "RoomMasterPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ChestInfo), global::Google.Protobuf.Protocol.ChestInfo.Parser, new[]{ "ChestId", "ChestLevel", "ChestPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CleanseInfo), global::Google.Protobuf.Protocol.CleanseInfo.Parser, new[]{ "CleanseId", "CleanseTransform", "CleansePoint", "CleanseDurationSeconds", "CleanseCoolTimeSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.Velocity), global::Google.Protobuf.Protocol.Velocity.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_RoomList), global::Google.Protobuf.Protocol.CS_RoomList.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_RoomList), global::Google.Protobuf.Protocol.SC_RoomList.Parser, new[]{ "Rooms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_MakeRoom), global::Google.Protobuf.Protocol.CS_MakeRoom.Parser, new[]{ "Title", "IsPrivate", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_MakeRoom), global::Google.Protobuf.Protocol.SC_MakeRoom.Parser, new[]{ "Room", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_EnterRoom), global::Google.Protobuf.Protocol.CS_EnterRoom.Parser, new[]{ "RoomId", "Password", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_AllowEnterRoom), global::Google.Protobuf.Protocol.SC_AllowEnterRoom.Parser, new[]{ "CanEnter", "MyPlayerId", "Room", "Players", "ReasonRejected", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_InformNewFaceInRoom), global::Google.Protobuf.Protocol.SC_InformNewFaceInRoom.Parser, new[]{ "RoomId", "CurrentCount", "NewPlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_LeaveRoom), global::Google.Protobuf.Protocol.CS_LeaveRoom.Parser, new[]{ "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_LeaveRoom), global::Google.Protobuf.Protocol.SC_LeaveRoom.Parser, new[]{ "PlayerId", "RoomMasterPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_ReadyRoom), global::Google.Protobuf.Protocol.CS_ReadyRoom.Parser, new[]{ "RoomId", "PlayerId", "IsReady" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_ReadyRoom), global::Google.Protobuf.Protocol.SC_ReadyRoom.Parser, new[]{ "RoomId", "ReadyPlayerInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_PingPong), global::Google.Protobuf.Protocol.SC_PingPong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_PingPong), global::Google.Protobuf.Protocol.CS_PingPong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_PingPong), global::Google.Protobuf.Protocol.DSC_PingPong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_PingPong), global::Google.Protobuf.Protocol.CDS_PingPong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CS_ConnectDedicatedServer), global::Google.Protobuf.Protocol.CS_ConnectDedicatedServer.Parser, new[]{ "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.SC_ConnectDedicatedServer), global::Google.Protobuf.Protocol.SC_ConnectDedicatedServer.Parser, new[]{ "Ip", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_InformRoomInfo), global::Google.Protobuf.Protocol.CDS_InformRoomInfo.Parser, new[]{ "RoomId", "PlayerNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_AllowEnterGame), global::Google.Protobuf.Protocol.CDS_AllowEnterGame.Parser, new[]{ "RoomId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_AllowEnterGame), global::Google.Protobuf.Protocol.DSC_AllowEnterGame.Parser, new[]{ "MyDedicatedPlayerId", "Players", "PlayerTransforms" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_InformLeaveDedicatedServer), global::Google.Protobuf.Protocol.CDS_InformLeaveDedicatedServer.Parser, new[]{ "DediplayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_InformNewFaceInDedicatedServer), global::Google.Protobuf.Protocol.DSC_InformNewFaceInDedicatedServer.Parser, new[]{ "NewPlayer", "SpawnTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_InformLeaveDedicatedServer), global::Google.Protobuf.Protocol.DSC_InformLeaveDedicatedServer.Parser, new[]{ "LeavePlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_StartGame), global::Google.Protobuf.Protocol.DSC_StartGame.Parser, new[]{ "Items", "Killers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_Move), global::Google.Protobuf.Protocol.CDS_Move.Parser, new[]{ "DediplayerId", "TransformInfo", "KeyboardInput", "Velocity", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_Move), global::Google.Protobuf.Protocol.DSC_Move.Parser, new[]{ "DediplayerId", "TransformInfo", "KeyboardInput", "Velocity", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_DayTimerStart), global::Google.Protobuf.Protocol.DSC_DayTimerStart.Parser, new[]{ "DaySeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_DayTimerSync), global::Google.Protobuf.Protocol.DSC_DayTimerSync.Parser, new[]{ "CurrentServerTimer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_DayTimerEnd), global::Google.Protobuf.Protocol.DSC_DayTimerEnd.Parser, new[]{ "KillerPlayerId", "KillerType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_NightTimerStart), global::Google.Protobuf.Protocol.DSC_NightTimerStart.Parser, new[]{ "NightSeconds", "GaugeMax", "PlayerGaugeDecreasePerSecond" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_NightTimerSync), global::Google.Protobuf.Protocol.DSC_NightTimerSync.Parser, new[]{ "CurrentServerTimer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_NightTimerEnd), global::Google.Protobuf.Protocol.DSC_NightTimerEnd.Parser, new[]{ "DeathCause", "DeathPlayerId", "KillerPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_NewChestsInfo), global::Google.Protobuf.Protocol.DSC_NewChestsInfo.Parser, new[]{ "ChestsInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_TryChestOpen), global::Google.Protobuf.Protocol.CDS_TryChestOpen.Parser, new[]{ "MyDediplayerId", "ChestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_ChestOpenSuccess), global::Google.Protobuf.Protocol.DSC_ChestOpenSuccess.Parser, new[]{ "ChestId", "PlayerId", "GetPoint", "TotalPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_RequestTimestamp), global::Google.Protobuf.Protocol.CDS_RequestTimestamp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_ResponseTimestamp), global::Google.Protobuf.Protocol.DSC_ResponseTimestamp.Parser, new[]{ "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_GaugeSync), global::Google.Protobuf.Protocol.DSC_GaugeSync.Parser, new[]{ "PlayerGauges", "PlayerGaugeDecreasePerSecond" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_NewCleansesInfo), global::Google.Protobuf.Protocol.DSC_NewCleansesInfo.Parser, new[]{ "Cleanses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_RequestCleansePermission), global::Google.Protobuf.Protocol.CDS_RequestCleansePermission.Parser, new[]{ "MyDediplayerId", "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_GiveCleansePermission), global::Google.Protobuf.Protocol.DSC_GiveCleansePermission.Parser, new[]{ "PlayerId", "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_CleanseQuit), global::Google.Protobuf.Protocol.CDS_CleanseQuit.Parser, new[]{ "MyDediplayerId", "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_CleanseQuit), global::Google.Protobuf.Protocol.DSC_CleanseQuit.Parser, new[]{ "PlayerId", "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_CleanseSuccess), global::Google.Protobuf.Protocol.CDS_CleanseSuccess.Parser, new[]{ "MyDediplayerId", "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_CleanseSuccess), global::Google.Protobuf.Protocol.DSC_CleanseSuccess.Parser, new[]{ "PlayerId", "CleanseId", "Gauge" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_CleanseCooltimeFinish), global::Google.Protobuf.Protocol.DSC_CleanseCooltimeFinish.Parser, new[]{ "CleanseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_ItemBuyRequest), global::Google.Protobuf.Protocol.CDS_ItemBuyRequest.Parser, new[]{ "MyDediplayerId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_ItemBuyResult), global::Google.Protobuf.Protocol.DSC_ItemBuyResult.Parser, new[]{ "PlayerId", "ItemId", "ItemTotalCount", "IsSuccess", "RemainMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_OnHoldItem), global::Google.Protobuf.Protocol.CDS_OnHoldItem.Parser, new[]{ "MyDediplayerId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_OnHoldItem), global::Google.Protobuf.Protocol.DSC_OnHoldItem.Parser, new[]{ "PlayerId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseDashItem), global::Google.Protobuf.Protocol.CDS_UseDashItem.Parser, new[]{ "MyDediplayerId", "ItemId", "DashStartingTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseDashItem), global::Google.Protobuf.Protocol.DSC_UseDashItem.Parser, new[]{ "PlayerId", "ItemId", "DashStartingTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_EndDashItem), global::Google.Protobuf.Protocol.DSC_EndDashItem.Parser, new[]{ "PlayerId", "ItemId", "DashEndTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseFireworkItem), global::Google.Protobuf.Protocol.CDS_UseFireworkItem.Parser, new[]{ "MyDediplayerId", "ItemId", "FireworkStartingTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseFireworkItem), global::Google.Protobuf.Protocol.DSC_UseFireworkItem.Parser, new[]{ "PlayerId", "ItemId", "FireworkStartingTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseInvisibleItem), global::Google.Protobuf.Protocol.CDS_UseInvisibleItem.Parser, new[]{ "MyDediplayerId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseInvisibleItem), global::Google.Protobuf.Protocol.DSC_UseInvisibleItem.Parser, new[]{ "PlayerId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseTrapItem), global::Google.Protobuf.Protocol.CDS_UseTrapItem.Parser, new[]{ "MyDediplayerId", "ItemId", "TrapTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseTrapItem), global::Google.Protobuf.Protocol.DSC_UseTrapItem.Parser, new[]{ "PlayerId", "ItemId", "TrapTransform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseHeartlessSkill), global::Google.Protobuf.Protocol.CDS_UseHeartlessSkill.Parser, new[]{ "MyDediplayerId", "KillerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseHeartlessSkill), global::Google.Protobuf.Protocol.DSC_UseHeartlessSkill.Parser, new[]{ "PlayerId", "KillerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.CDS_UseDetectorSkill), global::Google.Protobuf.Protocol.CDS_UseDetectorSkill.Parser, new[]{ "MyDediplayerId", "KillerId", "DetectedPlayerIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_UseDetectorSkill), global::Google.Protobuf.Protocol.DSC_UseDetectorSkill.Parser, new[]{ "PlayerId", "KillerId", "DetectedPlayerIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.DSC_EndGame), global::Google.Protobuf.Protocol.DSC_EndGame.Parser, new[]{ "WinnerPlayerId", "WinnerName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgId {
    [pbr::OriginalName("CS_ROOM_LIST")] CsRoomList = 0,
    [pbr::OriginalName("SC_ROOM_LIST")] ScRoomList = 1,
    [pbr::OriginalName("CS_MAKE_ROOM")] CsMakeRoom = 2,
    [pbr::OriginalName("SC_MAKE_ROOM")] ScMakeRoom = 3,
    [pbr::OriginalName("CS_ENTER_ROOM")] CsEnterRoom = 4,
    [pbr::OriginalName("SC_ALLOW_ENTER_ROOM")] ScAllowEnterRoom = 5,
    [pbr::OriginalName("SC_INFORM_NEW_FACE_IN_ROOM")] ScInformNewFaceInRoom = 6,
    [pbr::OriginalName("CS_LEAVE_ROOM")] CsLeaveRoom = 7,
    [pbr::OriginalName("SC_LEAVE_ROOM")] ScLeaveRoom = 8,
    [pbr::OriginalName("CS_READY_ROOM")] CsReadyRoom = 9,
    [pbr::OriginalName("SC_READY_ROOM")] ScReadyRoom = 10,
    [pbr::OriginalName("SC_PING_PONG")] ScPingPong = 11,
    [pbr::OriginalName("CS_PING_PONG")] CsPingPong = 12,
    [pbr::OriginalName("DSC_PING_PONG")] DscPingPong = 13,
    [pbr::OriginalName("CDS_PING_PONG")] CdsPingPong = 14,
    /// <summary>
    ///게임 시작버튼을 클라에서 눌렀을때 룸서버에게 데디서버 생성 및 정보 요청
    /// </summary>
    [pbr::OriginalName("CS_CONNECT_DEDICATED_SERVER")] CsConnectDedicatedServer = 15,
    /// <summary>
    ///룸서버로부터 데디서버 생성 및 관련 정보 응답
    /// </summary>
    [pbr::OriginalName("SC_CONNECT_DEDICATED_SERVER")] ScConnectDedicatedServer = 16,
    /// <summary>
    ///방장이 데디서버에게 방정보 전달
    /// </summary>
    [pbr::OriginalName("CDS_INFORM_ROOM_INFO")] CdsInformRoomInfo = 17,
    /// <summary>
    ///데디서버에게 인게임 접속 요청
    /// </summary>
    [pbr::OriginalName("CDS_ALLOW_ENTER_GAME")] CdsAllowEnterGame = 18,
    /// <summary>
    ///데디서버로부터 인게임 접속 가능여부 응답
    /// </summary>
    [pbr::OriginalName("DSC_ALLOW_ENTER_GAME")] DscAllowEnterGame = 19,
    /// <summary>
    ///데디서버로부터 새로운 플레이어가 접속했다는 정보
    /// </summary>
    [pbr::OriginalName("DSC_INFORM_NEW_FACE_IN_DEDICATED_SERVER")] DscInformNewFaceInDedicatedServer = 20,
    /// <summary>
    ///데디서버에게 플레이어가 나갔다는 정보 전달
    /// </summary>
    [pbr::OriginalName("CDS_INFORM_LEAVE_DEDICATED_SERVER")] CdsInformLeaveDedicatedServer = 21,
    /// <summary>
    ///데디서버로부터 플레이어가 나갔다는 정보
    /// </summary>
    [pbr::OriginalName("DSC_INFORM_LEAVE_DEDICATED_SERVER")] DscInformLeaveDedicatedServer = 22,
    /// <summary>
    ///데디서버가 클라에게 게임 시작 정보 전달
    /// </summary>
    [pbr::OriginalName("DSC_START_GAME")] DscStartGame = 23,
    /// <summary>
    ///데디서버에게 플레이어의 이동정보 전송
    /// </summary>
    [pbr::OriginalName("CDS_MOVE")] CdsMove = 24,
    /// <summary>
    ///데디서버로부터 플레이어의 이동정보 전달
    /// </summary>
    [pbr::OriginalName("DSC_MOVE")] DscMove = 25,
    /// <summary>
    ///데디서버가 낮 타이머 시작을 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_DAY_TIMER_START")] DscDayTimerStart = 26,
    /// <summary>
    ///데디서버가 낮 타이머 동기화정보를 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_DAY_TIMER_SYNC")] DscDayTimerSync = 27,
    /// <summary>
    ///데디서버가 낮 타이머 종료를 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_DAY_TIMER_END")] DscDayTimerEnd = 28,
    /// <summary>
    ///데디서버가 밤 타이머 시작을 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_NIGHT_TIMER_START")] DscNightTimerStart = 29,
    /// <summary>
    ///데디서버가 밤 타이머 동기화정보를 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_NIGHT_TIMER_SYNC")] DscNightTimerSync = 30,
    /// <summary>
    ///데디서버가 밤 타이머 종료를 클라들에게 전달
    /// </summary>
    [pbr::OriginalName("DSC_NIGHT_TIMER_END")] DscNightTimerEnd = 31,
    /// <summary>
    ///데디서버가 새로운 상자들 정보를 클라들에게 전달 (낮에 상자 초기화 용)
    /// </summary>
    [pbr::OriginalName("DSC_NEW_CHESTS_INFO")] DscNewChestsInfo = 32,
    /// <summary>
    ///클라가 데디서버에게 상자 열기 요청
    /// </summary>
    [pbr::OriginalName("CDS_TRY_CHEST_OPEN")] CdsTryChestOpen = 33,
    /// <summary>
    ///데디서버가 모든 클라에게 상자 열기 성공 결과 전달
    /// </summary>
    [pbr::OriginalName("DSC_CHEST_OPEN_SUCCESS")] DscChestOpenSuccess = 34,
    /// <summary>
    ///클라가 데디서버에게 타임스탬프 요청
    /// </summary>
    [pbr::OriginalName("CDS_REQUEST_TIMESTAMP")] CdsRequestTimestamp = 35,
    /// <summary>
    ///데디서버가 클라에게 타임스탬프 응답
    /// </summary>
    [pbr::OriginalName("DSC_RESPONSE_TIMESTAMP")] DscResponseTimestamp = 36,
    /// <summary>
    ///데디서버가 클라에게 게이지 동기화 정보 전달
    /// </summary>
    [pbr::OriginalName("DSC_Gauge_Sync")] DscGaugeSync = 37,
    /// <summary>
    ///데디서버가 클라에게 새로운 정화관련 정보 전달
    /// </summary>
    [pbr::OriginalName("DSC_NEW_CLEANSES_INFO")] DscNewCleansesInfo = 38,
    /// <summary>
    ///클라가 데디서버에게 정화 시도 소유권 요청
    /// </summary>
    [pbr::OriginalName("CDS_REQUEST_CLEANSE_PERMISSION")] CdsRequestCleansePermission = 39,
    /// <summary>
    ///데디서버가 클라들에게 정화 소유권 허가 여부 전달
    /// </summary>
    [pbr::OriginalName("DSC_GIVE_CLEANSE_PERMISSION")] DscGiveCleansePermission = 40,
    /// <summary>
    ///클라가 데디서버에게 정화 포기 전달
    /// </summary>
    [pbr::OriginalName("CDS_CLEANSE_QUIT")] CdsCleanseQuit = 41,
    /// <summary>
    ///데디서버가 클라들에게 정화 포기 전달
    /// </summary>
    [pbr::OriginalName("DSC_CLEANSE_QUIT")] DscCleanseQuit = 42,
    /// <summary>
    ///클라가 데디서버에게 정화 성공 전달
    /// </summary>
    [pbr::OriginalName("CDS_CLEANSE_SUCCESS")] CdsCleanseSuccess = 43,
    /// <summary>
    ///데디서버가 클라들에게 정화 성공 전달
    /// </summary>
    [pbr::OriginalName("DSC_CLEANSE_SUCCESS")] DscCleanseSuccess = 44,
    /// <summary>
    ///데디서버가 클라들에게 정화 쿨타임 종료 전달
    /// </summary>
    [pbr::OriginalName("DSC_CLEANSE_COOLTIME_FINISH")] DscCleanseCooltimeFinish = 45,
    /// <summary>
    ///클라가 데디서버에게 아이템 구매 요청
    /// </summary>
    [pbr::OriginalName("CDS_ITEM_BUY_REQUEST")] CdsItemBuyRequest = 46,
    /// <summary>
    ///데디서버가 클라에게 아이템 구매 결과 전달(실패일수도 있음)
    /// </summary>
    [pbr::OriginalName("DSC_ITEM_BUY_RESULT")] DscItemBuyResult = 47,
    /// <summary>
    ///클라가 아이템을 들었다고 데디서버에 알림
    /// </summary>
    [pbr::OriginalName("CDS_ON_HOLD_ITEM")] CdsOnHoldItem = 48,
    /// <summary>
    ///데디서버가 특정 클라가 특정 아이템을 들었다고 브로드캐스트함
    /// </summary>
    [pbr::OriginalName("DSC_ON_HOLD_ITEM")] DscOnHoldItem = 49,
    /// <summary>
    ///대쉬 아이템을 사용했다고 데디서버에 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_DASH_ITEM")] CdsUseDashItem = 50,
    /// <summary>
    ///데디서버가 특정 플레이어의 대쉬 아이템 사용을 클라들에게 알림(사용 가능여부 검증하고 가능했을때만)
    /// </summary>
    [pbr::OriginalName("DSC_USE_DASH_ITEM")] DscUseDashItem = 51,
    /// <summary>
    ///데디서버에서 특정 플레이어의 대쉬 아이템 사용이 끝났다고 클라들에게 알림 (데디서버측에서 처리가 끝났다는 의미)
    /// </summary>
    [pbr::OriginalName("DSC_END_DASH_ITEM")] DscEndDashItem = 52,
    /// <summary>
    ///폭죽 아이템을 사용했다고 데디서버에 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_FIREWORK_ITEM")] CdsUseFireworkItem = 53,
    /// <summary>
    ///데디서버가 특정 플레이어의 폭죽 아이템 사용을 클라들에게 알림(사용 가능여부 검증하고 가능했을때만)
    /// </summary>
    [pbr::OriginalName("DSC_USE_FIREWORK_ITEM")] DscUseFireworkItem = 54,
    /// <summary>
    ///투명 아이템을 사용했다고 데디서버에 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_INVISIBLE_ITEM")] CdsUseInvisibleItem = 55,
    /// <summary>
    ///데디서버가 특정 플레이어의 투명 아이템 사용을 클라들에게 알림(사용 가능여부 검증하고 가능했을때만)
    /// </summary>
    [pbr::OriginalName("DSC_USE_INVISIBLE_ITEM")] DscUseInvisibleItem = 56,
    /// <summary>
    ///트랩 아이템을 사용했다고 데디서버에 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_TRAP_ITEM")] CdsUseTrapItem = 59,
    /// <summary>
    ///데디서버가 특정 플레이어의 트랩 아이템 사용을 클라들에게 알림(사용 가능여부 검증하고 가능했을때만)
    /// </summary>
    [pbr::OriginalName("DSC_USE_TRAP_ITEM")] DscUseTrapItem = 60,
    /// <summary>
    ///데디서버에게 하트리스 스킬 사용했다고 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_HEARTLESS_SKILL")] CdsUseHeartlessSkill = 63,
    /// <summary>
    ///데디서버가 클라에게 하트리스 스킬 사용 알림
    /// </summary>
    [pbr::OriginalName("DSC_USE_HEARTLESS_SKILL")] DscUseHeartlessSkill = 64,
    /// <summary>
    ///데디서버에게 스캔 스킬 사용했다고 알림
    /// </summary>
    [pbr::OriginalName("CDS_USE_DETECTOR_SKILL")] CdsUseDetectorSkill = 65,
    /// <summary>
    ///데디서버가 클라에게 스캔 스킬 사용 알림
    /// </summary>
    [pbr::OriginalName("DSC_USE_DETECTOR_SKILL")] DscUseDetectorSkill = 66,
    /// <summary>
    ///게임 종료를 클라들에게 알림
    /// </summary>
    [pbr::OriginalName("DSC_END_GAME")] DscEndGame = 80,
  }

  public enum ReasonRejected {
    [pbr::OriginalName("RoomNotExist")] RoomNotExist = 0,
    [pbr::OriginalName("CurrentlyPlaying")] CurrentlyPlaying = 1,
    [pbr::OriginalName("RoomIsFull")] RoomIsFull = 2,
    [pbr::OriginalName("WrongPassword")] WrongPassword = 3,
  }

  public enum DeathCause {
    [pbr::OriginalName("TimeOver")] TimeOver = 0,
    [pbr::OriginalName("GaugeOver")] GaugeOver = 1,
  }

  #endregion

  #region Messages
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionInfo : pb::IMessage<PositionInfo> {
    private static readonly pb::MessageParser<PositionInfo> _parser = new pb::MessageParser<PositionInfo>(() => new PositionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo(PositionInfo other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo Clone() {
      return new PositionInfo(this);
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "posZ" field.</summary>
    public const int PosZFieldNumber = 3;
    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionInfo other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            PosZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RotationInfo : pb::IMessage<RotationInfo> {
    private static readonly pb::MessageParser<RotationInfo> _parser = new pb::MessageParser<RotationInfo>(() => new RotationInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RotationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationInfo(RotationInfo other) : this() {
      rotX_ = other.rotX_;
      rotY_ = other.rotY_;
      rotZ_ = other.rotZ_;
      rotW_ = other.rotW_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationInfo Clone() {
      return new RotationInfo(this);
    }

    /// <summary>Field number for the "rotX" field.</summary>
    public const int RotXFieldNumber = 1;
    private float rotX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotX {
      get { return rotX_; }
      set {
        rotX_ = value;
      }
    }

    /// <summary>Field number for the "rotY" field.</summary>
    public const int RotYFieldNumber = 2;
    private float rotY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotY {
      get { return rotY_; }
      set {
        rotY_ = value;
      }
    }

    /// <summary>Field number for the "rotZ" field.</summary>
    public const int RotZFieldNumber = 3;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    /// <summary>Field number for the "rotW" field.</summary>
    public const int RotWFieldNumber = 4;
    private float rotW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotW {
      get { return rotW_; }
      set {
        rotW_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RotationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RotationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotX, other.RotX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotY, other.RotY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotW, other.RotW)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RotX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotX);
      if (RotY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (RotW != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotW);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RotX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(RotX);
      }
      if (RotY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RotY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(RotZ);
      }
      if (RotW != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RotX != 0F) {
        size += 1 + 4;
      }
      if (RotY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (RotW != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RotationInfo other) {
      if (other == null) {
        return;
      }
      if (other.RotX != 0F) {
        RotX = other.RotX;
      }
      if (other.RotY != 0F) {
        RotY = other.RotY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      if (other.RotW != 0F) {
        RotW = other.RotW;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            RotX = input.ReadFloat();
            break;
          }
          case 21: {
            RotY = input.ReadFloat();
            break;
          }
          case 29: {
            RotZ = input.ReadFloat();
            break;
          }
          case 37: {
            RotW = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransformInfo : pb::IMessage<TransformInfo> {
    private static readonly pb::MessageParser<TransformInfo> _parser = new pb::MessageParser<TransformInfo>(() => new TransformInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformInfo(TransformInfo other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformInfo Clone() {
      return new TransformInfo(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PositionInfo position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 2;
    private global::Google.Protobuf.Protocol.RotationInfo rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RotationInfo Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformInfo other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Google.Protobuf.Protocol.RotationInfo();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Google.Protobuf.Protocol.RotationInfo();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomId_ = other.roomId_;
      title_ = other.title_;
      currentCount_ = other.currentCount_;
      maxCount_ = other.maxCount_;
      isPrivate_ = other.isPrivate_;
      isPlaying_ = other.isPlaying_;
      roomMasterPlayerId_ = other.roomMasterPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentCount" field.</summary>
    public const int CurrentCountFieldNumber = 3;
    private int currentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentCount {
      get { return currentCount_; }
      set {
        currentCount_ = value;
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 4;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "isPrivate" field.</summary>
    public const int IsPrivateFieldNumber = 5;
    private bool isPrivate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivate {
      get { return isPrivate_; }
      set {
        isPrivate_ = value;
      }
    }

    /// <summary>Field number for the "isPlaying" field.</summary>
    public const int IsPlayingFieldNumber = 6;
    private bool isPlaying_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlaying {
      get { return isPlaying_; }
      set {
        isPlaying_ = value;
      }
    }

    /// <summary>Field number for the "roomMasterPlayerId" field.</summary>
    public const int RoomMasterPlayerIdFieldNumber = 7;
    private int roomMasterPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomMasterPlayerId {
      get { return roomMasterPlayerId_; }
      set {
        roomMasterPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (Title != other.Title) return false;
      if (CurrentCount != other.CurrentCount) return false;
      if (MaxCount != other.MaxCount) return false;
      if (IsPrivate != other.IsPrivate) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if (RoomMasterPlayerId != other.RoomMasterPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (CurrentCount != 0) hash ^= CurrentCount.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (IsPrivate != false) hash ^= IsPrivate.GetHashCode();
      if (IsPlaying != false) hash ^= IsPlaying.GetHashCode();
      if (RoomMasterPlayerId != 0) hash ^= RoomMasterPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (CurrentCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentCount);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxCount);
      }
      if (IsPrivate != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsPrivate);
      }
      if (IsPlaying != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPlaying);
      }
      if (RoomMasterPlayerId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RoomMasterPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (CurrentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentCount);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (IsPrivate != false) {
        size += 1 + 1;
      }
      if (IsPlaying != false) {
        size += 1 + 1;
      }
      if (RoomMasterPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomMasterPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.CurrentCount != 0) {
        CurrentCount = other.CurrentCount;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.IsPrivate != false) {
        IsPrivate = other.IsPrivate;
      }
      if (other.IsPlaying != false) {
        IsPlaying = other.IsPlaying;
      }
      if (other.RoomMasterPlayerId != 0) {
        RoomMasterPlayerId = other.RoomMasterPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            CurrentCount = input.ReadInt32();
            break;
          }
          case 32: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 40: {
            IsPrivate = input.ReadBool();
            break;
          }
          case 48: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 56: {
            RoomMasterPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChestInfo : pb::IMessage<ChestInfo> {
    private static readonly pb::MessageParser<ChestInfo> _parser = new pb::MessageParser<ChestInfo>(() => new ChestInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChestInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestInfo(ChestInfo other) : this() {
      chestId_ = other.chestId_;
      chestLevel_ = other.chestLevel_;
      chestPoint_ = other.chestPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestInfo Clone() {
      return new ChestInfo(this);
    }

    /// <summary>Field number for the "chestId" field.</summary>
    public const int ChestIdFieldNumber = 1;
    private int chestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    /// <summary>Field number for the "chestLevel" field.</summary>
    public const int ChestLevelFieldNumber = 2;
    private int chestLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestLevel {
      get { return chestLevel_; }
      set {
        chestLevel_ = value;
      }
    }

    /// <summary>Field number for the "chestPoint" field.</summary>
    public const int ChestPointFieldNumber = 3;
    private int chestPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestPoint {
      get { return chestPoint_; }
      set {
        chestPoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChestInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChestInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChestId != other.ChestId) return false;
      if (ChestLevel != other.ChestLevel) return false;
      if (ChestPoint != other.ChestPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (ChestLevel != 0) hash ^= ChestLevel.GetHashCode();
      if (ChestPoint != 0) hash ^= ChestPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChestId);
      }
      if (ChestLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChestLevel);
      }
      if (ChestPoint != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChestPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (ChestLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestLevel);
      }
      if (ChestPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChestInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      if (other.ChestLevel != 0) {
        ChestLevel = other.ChestLevel;
      }
      if (other.ChestPoint != 0) {
        ChestPoint = other.ChestPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChestId = input.ReadInt32();
            break;
          }
          case 16: {
            ChestLevel = input.ReadInt32();
            break;
          }
          case 24: {
            ChestPoint = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CleanseInfo : pb::IMessage<CleanseInfo> {
    private static readonly pb::MessageParser<CleanseInfo> _parser = new pb::MessageParser<CleanseInfo>(() => new CleanseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CleanseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CleanseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CleanseInfo(CleanseInfo other) : this() {
      cleanseId_ = other.cleanseId_;
      cleanseTransform_ = other.cleanseTransform_ != null ? other.cleanseTransform_.Clone() : null;
      cleansePoint_ = other.cleansePoint_;
      cleanseDurationSeconds_ = other.cleanseDurationSeconds_;
      cleanseCoolTimeSeconds_ = other.cleanseCoolTimeSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CleanseInfo Clone() {
      return new CleanseInfo(this);
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 1;
    private int cleanseId_;
    /// <summary>
    ///정화 아이디
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseTransform" field.</summary>
    public const int CleanseTransformFieldNumber = 2;
    private global::Google.Protobuf.Protocol.TransformInfo cleanseTransform_;
    /// <summary>
    ///정화 트랜스폼 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo CleanseTransform {
      get { return cleanseTransform_; }
      set {
        cleanseTransform_ = value;
      }
    }

    /// <summary>Field number for the "cleansePoint" field.</summary>
    public const int CleansePointFieldNumber = 3;
    private float cleansePoint_;
    /// <summary>
    ///정화로 올라갈 게이지 정도
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CleansePoint {
      get { return cleansePoint_; }
      set {
        cleansePoint_ = value;
      }
    }

    /// <summary>Field number for the "cleanseDurationSeconds" field.</summary>
    public const int CleanseDurationSecondsFieldNumber = 4;
    private float cleanseDurationSeconds_;
    /// <summary>
    ///정화하는데 걸리는 시간
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CleanseDurationSeconds {
      get { return cleanseDurationSeconds_; }
      set {
        cleanseDurationSeconds_ = value;
      }
    }

    /// <summary>Field number for the "cleanseCoolTimeSeconds" field.</summary>
    public const int CleanseCoolTimeSecondsFieldNumber = 5;
    private float cleanseCoolTimeSeconds_;
    /// <summary>
    ///정화 재사용 쿨타임
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CleanseCoolTimeSeconds {
      get { return cleanseCoolTimeSeconds_; }
      set {
        cleanseCoolTimeSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CleanseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CleanseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CleanseId != other.CleanseId) return false;
      if (!object.Equals(CleanseTransform, other.CleanseTransform)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CleansePoint, other.CleansePoint)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CleanseDurationSeconds, other.CleanseDurationSeconds)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CleanseCoolTimeSeconds, other.CleanseCoolTimeSeconds)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (cleanseTransform_ != null) hash ^= CleanseTransform.GetHashCode();
      if (CleansePoint != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CleansePoint);
      if (CleanseDurationSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CleanseDurationSeconds);
      if (CleanseCoolTimeSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CleanseCoolTimeSeconds);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CleanseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CleanseId);
      }
      if (cleanseTransform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CleanseTransform);
      }
      if (CleansePoint != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CleansePoint);
      }
      if (CleanseDurationSeconds != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(CleanseDurationSeconds);
      }
      if (CleanseCoolTimeSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CleanseCoolTimeSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (cleanseTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CleanseTransform);
      }
      if (CleansePoint != 0F) {
        size += 1 + 4;
      }
      if (CleanseDurationSeconds != 0F) {
        size += 1 + 4;
      }
      if (CleanseCoolTimeSeconds != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CleanseInfo other) {
      if (other == null) {
        return;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      if (other.cleanseTransform_ != null) {
        if (cleanseTransform_ == null) {
          CleanseTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        CleanseTransform.MergeFrom(other.CleanseTransform);
      }
      if (other.CleansePoint != 0F) {
        CleansePoint = other.CleansePoint;
      }
      if (other.CleanseDurationSeconds != 0F) {
        CleanseDurationSeconds = other.CleanseDurationSeconds;
      }
      if (other.CleanseCoolTimeSeconds != 0F) {
        CleanseCoolTimeSeconds = other.CleanseCoolTimeSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CleanseId = input.ReadInt32();
            break;
          }
          case 18: {
            if (cleanseTransform_ == null) {
              CleanseTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(CleanseTransform);
            break;
          }
          case 29: {
            CleansePoint = input.ReadFloat();
            break;
          }
          case 37: {
            CleanseDurationSeconds = input.ReadFloat();
            break;
          }
          case 45: {
            CleanseCoolTimeSeconds = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Velocity : pb::IMessage<Velocity> {
    private static readonly pb::MessageParser<Velocity> _parser = new pb::MessageParser<Velocity>(() => new Velocity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Velocity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Velocity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Velocity(Velocity other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Velocity Clone() {
      return new Velocity(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Velocity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Velocity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Velocity other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS_RoomList : pb::IMessage<CS_RoomList> {
    private static readonly pb::MessageParser<CS_RoomList> _parser = new pb::MessageParser<CS_RoomList>(() => new CS_RoomList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_RoomList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RoomList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RoomList(CS_RoomList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_RoomList Clone() {
      return new CS_RoomList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_RoomList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_RoomList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_RoomList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SC_RoomList : pb::IMessage<SC_RoomList> {
    private static readonly pb::MessageParser<SC_RoomList> _parser = new pb::MessageParser<SC_RoomList>(() => new SC_RoomList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_RoomList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_RoomList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_RoomList(SC_RoomList other) : this() {
      rooms_ = other.rooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_RoomList Clone() {
      return new SC_RoomList(this);
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.RoomInfo> _repeated_rooms_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.RoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.RoomInfo> rooms_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.RoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.RoomInfo> Rooms {
      get { return rooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_RoomList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_RoomList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rooms_.Equals(other.rooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rooms_.WriteTo(output, _repeated_rooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rooms_.CalculateSize(_repeated_rooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_RoomList other) {
      if (other == null) {
        return;
      }
      rooms_.Add(other.rooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS_MakeRoom : pb::IMessage<CS_MakeRoom> {
    private static readonly pb::MessageParser<CS_MakeRoom> _parser = new pb::MessageParser<CS_MakeRoom>(() => new CS_MakeRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_MakeRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_MakeRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_MakeRoom(CS_MakeRoom other) : this() {
      title_ = other.title_;
      isPrivate_ = other.isPrivate_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_MakeRoom Clone() {
      return new CS_MakeRoom(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPrivate" field.</summary>
    public const int IsPrivateFieldNumber = 2;
    private bool isPrivate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivate {
      get { return isPrivate_; }
      set {
        isPrivate_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_MakeRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_MakeRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (IsPrivate != other.IsPrivate) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (IsPrivate != false) hash ^= IsPrivate.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (IsPrivate != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsPrivate);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (IsPrivate != false) {
        size += 1 + 1;
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_MakeRoom other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.IsPrivate != false) {
        IsPrivate = other.IsPrivate;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            IsPrivate = input.ReadBool();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_MakeRoom : pb::IMessage<SC_MakeRoom> {
    private static readonly pb::MessageParser<SC_MakeRoom> _parser = new pb::MessageParser<SC_MakeRoom>(() => new SC_MakeRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_MakeRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_MakeRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_MakeRoom(SC_MakeRoom other) : this() {
      room_ = other.room_ != null ? other.room_.Clone() : null;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_MakeRoom Clone() {
      return new SC_MakeRoom(this);
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 1;
    private global::Google.Protobuf.Protocol.RoomInfo room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RoomInfo Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_MakeRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_MakeRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Room, other.Room)) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (room_ != null) hash ^= Room.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_MakeRoom other) {
      if (other == null) {
        return;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Google.Protobuf.Protocol.RoomInfo();
        }
        Room.MergeFrom(other.Room);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (room_ == null) {
              Room = new global::Google.Protobuf.Protocol.RoomInfo();
            }
            input.ReadMessage(Room);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS_EnterRoom : pb::IMessage<CS_EnterRoom> {
    private static readonly pb::MessageParser<CS_EnterRoom> _parser = new pb::MessageParser<CS_EnterRoom>(() => new CS_EnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_EnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_EnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_EnterRoom(CS_EnterRoom other) : this() {
      roomId_ = other.roomId_;
      password_ = other.password_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_EnterRoom Clone() {
      return new CS_EnterRoom(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_EnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_EnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (Password != other.Password) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_EnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_AllowEnterRoom : pb::IMessage<SC_AllowEnterRoom> {
    private static readonly pb::MessageParser<SC_AllowEnterRoom> _parser = new pb::MessageParser<SC_AllowEnterRoom>(() => new SC_AllowEnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_AllowEnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_AllowEnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_AllowEnterRoom(SC_AllowEnterRoom other) : this() {
      canEnter_ = other.canEnter_;
      myPlayerId_ = other.myPlayerId_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      players_ = other.players_.Clone();
      reasonRejected_ = other.reasonRejected_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_AllowEnterRoom Clone() {
      return new SC_AllowEnterRoom(this);
    }

    /// <summary>Field number for the "canEnter" field.</summary>
    public const int CanEnterFieldNumber = 1;
    private bool canEnter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanEnter {
      get { return canEnter_; }
      set {
        canEnter_ = value;
      }
    }

    /// <summary>Field number for the "myPlayerId" field.</summary>
    public const int MyPlayerIdFieldNumber = 2;
    private int myPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyPlayerId {
      get { return myPlayerId_; }
      set {
        myPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 3;
    private global::Google.Protobuf.Protocol.RoomInfo room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RoomInfo Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.Protocol.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> players_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "reasonRejected" field.</summary>
    public const int ReasonRejectedFieldNumber = 5;
    private global::Google.Protobuf.Protocol.ReasonRejected reasonRejected_ = global::Google.Protobuf.Protocol.ReasonRejected.RoomNotExist;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ReasonRejected ReasonRejected {
      get { return reasonRejected_; }
      set {
        reasonRejected_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_AllowEnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_AllowEnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanEnter != other.CanEnter) return false;
      if (MyPlayerId != other.MyPlayerId) return false;
      if (!object.Equals(Room, other.Room)) return false;
      if(!players_.Equals(other.players_)) return false;
      if (ReasonRejected != other.ReasonRejected) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanEnter != false) hash ^= CanEnter.GetHashCode();
      if (MyPlayerId != 0) hash ^= MyPlayerId.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      hash ^= players_.GetHashCode();
      if (ReasonRejected != global::Google.Protobuf.Protocol.ReasonRejected.RoomNotExist) hash ^= ReasonRejected.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CanEnter != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanEnter);
      }
      if (MyPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MyPlayerId);
      }
      if (room_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Room);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (ReasonRejected != global::Google.Protobuf.Protocol.ReasonRejected.RoomNotExist) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ReasonRejected);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanEnter != false) {
        size += 1 + 1;
      }
      if (MyPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyPlayerId);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (ReasonRejected != global::Google.Protobuf.Protocol.ReasonRejected.RoomNotExist) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReasonRejected);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_AllowEnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.CanEnter != false) {
        CanEnter = other.CanEnter;
      }
      if (other.MyPlayerId != 0) {
        MyPlayerId = other.MyPlayerId;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Google.Protobuf.Protocol.RoomInfo();
        }
        Room.MergeFrom(other.Room);
      }
      players_.Add(other.players_);
      if (other.ReasonRejected != global::Google.Protobuf.Protocol.ReasonRejected.RoomNotExist) {
        ReasonRejected = other.ReasonRejected;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanEnter = input.ReadBool();
            break;
          }
          case 16: {
            MyPlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (room_ == null) {
              Room = new global::Google.Protobuf.Protocol.RoomInfo();
            }
            input.ReadMessage(Room);
            break;
          }
          case 34: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 40: {
            ReasonRejected = (global::Google.Protobuf.Protocol.ReasonRejected) input.ReadEnum();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_InformNewFaceInRoom : pb::IMessage<SC_InformNewFaceInRoom> {
    private static readonly pb::MessageParser<SC_InformNewFaceInRoom> _parser = new pb::MessageParser<SC_InformNewFaceInRoom>(() => new SC_InformNewFaceInRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_InformNewFaceInRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_InformNewFaceInRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_InformNewFaceInRoom(SC_InformNewFaceInRoom other) : this() {
      roomId_ = other.roomId_;
      currentCount_ = other.currentCount_;
      newPlayer_ = other.newPlayer_ != null ? other.newPlayer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_InformNewFaceInRoom Clone() {
      return new SC_InformNewFaceInRoom(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "currentCount" field.</summary>
    public const int CurrentCountFieldNumber = 2;
    private int currentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentCount {
      get { return currentCount_; }
      set {
        currentCount_ = value;
      }
    }

    /// <summary>Field number for the "newPlayer" field.</summary>
    public const int NewPlayerFieldNumber = 3;
    private global::Google.Protobuf.Protocol.PlayerInfo newPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo NewPlayer {
      get { return newPlayer_; }
      set {
        newPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_InformNewFaceInRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_InformNewFaceInRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (CurrentCount != other.CurrentCount) return false;
      if (!object.Equals(NewPlayer, other.NewPlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (CurrentCount != 0) hash ^= CurrentCount.GetHashCode();
      if (newPlayer_ != null) hash ^= NewPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (CurrentCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentCount);
      }
      if (newPlayer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (CurrentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentCount);
      }
      if (newPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_InformNewFaceInRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.CurrentCount != 0) {
        CurrentCount = other.CurrentCount;
      }
      if (other.newPlayer_ != null) {
        if (newPlayer_ == null) {
          NewPlayer = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        NewPlayer.MergeFrom(other.NewPlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentCount = input.ReadInt32();
            break;
          }
          case 26: {
            if (newPlayer_ == null) {
              NewPlayer = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(NewPlayer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS_LeaveRoom : pb::IMessage<CS_LeaveRoom> {
    private static readonly pb::MessageParser<CS_LeaveRoom> _parser = new pb::MessageParser<CS_LeaveRoom>(() => new CS_LeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_LeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_LeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_LeaveRoom(CS_LeaveRoom other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_LeaveRoom Clone() {
      return new CS_LeaveRoom(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_LeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_LeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_LeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_LeaveRoom : pb::IMessage<SC_LeaveRoom> {
    private static readonly pb::MessageParser<SC_LeaveRoom> _parser = new pb::MessageParser<SC_LeaveRoom>(() => new SC_LeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_LeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_LeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_LeaveRoom(SC_LeaveRoom other) : this() {
      playerId_ = other.playerId_;
      roomMasterPlayerId_ = other.roomMasterPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_LeaveRoom Clone() {
      return new SC_LeaveRoom(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    /// <summary>
    ///방에서 나간 사람의 플레이어id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "roomMasterPlayerId" field.</summary>
    public const int RoomMasterPlayerIdFieldNumber = 2;
    private int roomMasterPlayerId_;
    /// <summary>
    ///방장의 플레이어id (방장이 나갔을수도 있으니 새로 갱신)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomMasterPlayerId {
      get { return roomMasterPlayerId_; }
      set {
        roomMasterPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_LeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_LeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (RoomMasterPlayerId != other.RoomMasterPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (RoomMasterPlayerId != 0) hash ^= RoomMasterPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (RoomMasterPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomMasterPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (RoomMasterPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomMasterPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_LeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.RoomMasterPlayerId != 0) {
        RoomMasterPlayerId = other.RoomMasterPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomMasterPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS_ReadyRoom : pb::IMessage<CS_ReadyRoom> {
    private static readonly pb::MessageParser<CS_ReadyRoom> _parser = new pb::MessageParser<CS_ReadyRoom>(() => new CS_ReadyRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_ReadyRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ReadyRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ReadyRoom(CS_ReadyRoom other) : this() {
      roomId_ = other.roomId_;
      playerId_ = other.playerId_;
      isReady_ = other.isReady_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ReadyRoom Clone() {
      return new CS_ReadyRoom(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 3;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_ReadyRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_ReadyRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (IsReady != other.IsReady) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (IsReady != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsReady);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_ReadyRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            IsReady = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_ReadyRoom : pb::IMessage<SC_ReadyRoom> {
    private static readonly pb::MessageParser<SC_ReadyRoom> _parser = new pb::MessageParser<SC_ReadyRoom>(() => new SC_ReadyRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_ReadyRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ReadyRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ReadyRoom(SC_ReadyRoom other) : this() {
      roomId_ = other.roomId_;
      readyPlayerInfo_ = other.readyPlayerInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ReadyRoom Clone() {
      return new SC_ReadyRoom(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "readyPlayerInfo" field.</summary>
    public const int ReadyPlayerInfoFieldNumber = 2;
    private static readonly pbc::MapField<int, bool>.Codec _map_readyPlayerInfo_codec
        = new pbc::MapField<int, bool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForBool(16, false), 18);
    private readonly pbc::MapField<int, bool> readyPlayerInfo_ = new pbc::MapField<int, bool>();
    /// <summary>
    ///플레이어id, 준비상태
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, bool> ReadyPlayerInfo {
      get { return readyPlayerInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_ReadyRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_ReadyRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (!ReadyPlayerInfo.Equals(other.ReadyPlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      hash ^= ReadyPlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      readyPlayerInfo_.WriteTo(output, _map_readyPlayerInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      size += readyPlayerInfo_.CalculateSize(_map_readyPlayerInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_ReadyRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      readyPlayerInfo_.Add(other.readyPlayerInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            readyPlayerInfo_.AddEntriesFrom(input, _map_readyPlayerInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_PingPong : pb::IMessage<SC_PingPong> {
    private static readonly pb::MessageParser<SC_PingPong> _parser = new pb::MessageParser<SC_PingPong>(() => new SC_PingPong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_PingPong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_PingPong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_PingPong(SC_PingPong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_PingPong Clone() {
      return new SC_PingPong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_PingPong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_PingPong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_PingPong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CS_PingPong : pb::IMessage<CS_PingPong> {
    private static readonly pb::MessageParser<CS_PingPong> _parser = new pb::MessageParser<CS_PingPong>(() => new CS_PingPong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_PingPong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_PingPong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_PingPong(CS_PingPong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_PingPong Clone() {
      return new CS_PingPong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_PingPong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_PingPong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_PingPong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DSC_PingPong : pb::IMessage<DSC_PingPong> {
    private static readonly pb::MessageParser<DSC_PingPong> _parser = new pb::MessageParser<DSC_PingPong>(() => new DSC_PingPong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_PingPong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_PingPong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_PingPong(DSC_PingPong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_PingPong Clone() {
      return new DSC_PingPong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_PingPong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_PingPong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_PingPong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CDS_PingPong : pb::IMessage<CDS_PingPong> {
    private static readonly pb::MessageParser<CDS_PingPong> _parser = new pb::MessageParser<CDS_PingPong>(() => new CDS_PingPong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_PingPong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_PingPong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_PingPong(CDS_PingPong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_PingPong Clone() {
      return new CDS_PingPong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_PingPong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_PingPong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_PingPong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CS_ConnectDedicatedServer : pb::IMessage<CS_ConnectDedicatedServer> {
    private static readonly pb::MessageParser<CS_ConnectDedicatedServer> _parser = new pb::MessageParser<CS_ConnectDedicatedServer>(() => new CS_ConnectDedicatedServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS_ConnectDedicatedServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ConnectDedicatedServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ConnectDedicatedServer(CS_ConnectDedicatedServer other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS_ConnectDedicatedServer Clone() {
      return new CS_ConnectDedicatedServer(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS_ConnectDedicatedServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS_ConnectDedicatedServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS_ConnectDedicatedServer other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SC_ConnectDedicatedServer : pb::IMessage<SC_ConnectDedicatedServer> {
    private static readonly pb::MessageParser<SC_ConnectDedicatedServer> _parser = new pb::MessageParser<SC_ConnectDedicatedServer>(() => new SC_ConnectDedicatedServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_ConnectDedicatedServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ConnectDedicatedServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ConnectDedicatedServer(SC_ConnectDedicatedServer other) : this() {
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_ConnectDedicatedServer Clone() {
      return new SC_ConnectDedicatedServer(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_ConnectDedicatedServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_ConnectDedicatedServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_ConnectDedicatedServer other) {
      if (other == null) {
        return;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_InformRoomInfo : pb::IMessage<CDS_InformRoomInfo> {
    private static readonly pb::MessageParser<CDS_InformRoomInfo> _parser = new pb::MessageParser<CDS_InformRoomInfo>(() => new CDS_InformRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_InformRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformRoomInfo(CDS_InformRoomInfo other) : this() {
      roomId_ = other.roomId_;
      playerNum_ = other.playerNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformRoomInfo Clone() {
      return new CDS_InformRoomInfo(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "playerNum" field.</summary>
    public const int PlayerNumFieldNumber = 2;
    private int playerNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerNum {
      get { return playerNum_; }
      set {
        playerNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_InformRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_InformRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (PlayerNum != other.PlayerNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (PlayerNum != 0) hash ^= PlayerNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (PlayerNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (PlayerNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_InformRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.PlayerNum != 0) {
        PlayerNum = other.PlayerNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_AllowEnterGame : pb::IMessage<CDS_AllowEnterGame> {
    private static readonly pb::MessageParser<CDS_AllowEnterGame> _parser = new pb::MessageParser<CDS_AllowEnterGame>(() => new CDS_AllowEnterGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_AllowEnterGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_AllowEnterGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_AllowEnterGame(CDS_AllowEnterGame other) : this() {
      roomId_ = other.roomId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_AllowEnterGame Clone() {
      return new CDS_AllowEnterGame(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_AllowEnterGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_AllowEnterGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_AllowEnterGame other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_AllowEnterGame : pb::IMessage<DSC_AllowEnterGame> {
    private static readonly pb::MessageParser<DSC_AllowEnterGame> _parser = new pb::MessageParser<DSC_AllowEnterGame>(() => new DSC_AllowEnterGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_AllowEnterGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_AllowEnterGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_AllowEnterGame(DSC_AllowEnterGame other) : this() {
      myDedicatedPlayerId_ = other.myDedicatedPlayerId_;
      players_ = other.players_.Clone();
      playerTransforms_ = other.playerTransforms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_AllowEnterGame Clone() {
      return new DSC_AllowEnterGame(this);
    }

    /// <summary>Field number for the "myDedicatedPlayerId" field.</summary>
    public const int MyDedicatedPlayerIdFieldNumber = 1;
    private int myDedicatedPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDedicatedPlayerId {
      get { return myDedicatedPlayerId_; }
      set {
        myDedicatedPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> players_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "playerTransforms" field.</summary>
    public const int PlayerTransformsFieldNumber = 3;
    private static readonly pbc::MapField<int, global::Google.Protobuf.Protocol.TransformInfo>.Codec _map_playerTransforms_codec
        = new pbc::MapField<int, global::Google.Protobuf.Protocol.TransformInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.TransformInfo.Parser), 26);
    private readonly pbc::MapField<int, global::Google.Protobuf.Protocol.TransformInfo> playerTransforms_ = new pbc::MapField<int, global::Google.Protobuf.Protocol.TransformInfo>();
    /// <summary>
    ///[플레이어id, transform]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.Protocol.TransformInfo> PlayerTransforms {
      get { return playerTransforms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_AllowEnterGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_AllowEnterGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDedicatedPlayerId != other.MyDedicatedPlayerId) return false;
      if(!players_.Equals(other.players_)) return false;
      if (!PlayerTransforms.Equals(other.PlayerTransforms)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDedicatedPlayerId != 0) hash ^= MyDedicatedPlayerId.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= PlayerTransforms.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDedicatedPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDedicatedPlayerId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      playerTransforms_.WriteTo(output, _map_playerTransforms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDedicatedPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDedicatedPlayerId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += playerTransforms_.CalculateSize(_map_playerTransforms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_AllowEnterGame other) {
      if (other == null) {
        return;
      }
      if (other.MyDedicatedPlayerId != 0) {
        MyDedicatedPlayerId = other.MyDedicatedPlayerId;
      }
      players_.Add(other.players_);
      playerTransforms_.Add(other.playerTransforms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDedicatedPlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 26: {
            playerTransforms_.AddEntriesFrom(input, _map_playerTransforms_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_InformLeaveDedicatedServer : pb::IMessage<CDS_InformLeaveDedicatedServer> {
    private static readonly pb::MessageParser<CDS_InformLeaveDedicatedServer> _parser = new pb::MessageParser<CDS_InformLeaveDedicatedServer>(() => new CDS_InformLeaveDedicatedServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_InformLeaveDedicatedServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformLeaveDedicatedServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformLeaveDedicatedServer(CDS_InformLeaveDedicatedServer other) : this() {
      dediplayerId_ = other.dediplayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_InformLeaveDedicatedServer Clone() {
      return new CDS_InformLeaveDedicatedServer(this);
    }

    /// <summary>Field number for the "dediplayerId" field.</summary>
    public const int DediplayerIdFieldNumber = 1;
    private int dediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DediplayerId {
      get { return dediplayerId_; }
      set {
        dediplayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_InformLeaveDedicatedServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_InformLeaveDedicatedServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DediplayerId != other.DediplayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DediplayerId != 0) hash ^= DediplayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DediplayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DediplayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_InformLeaveDedicatedServer other) {
      if (other == null) {
        return;
      }
      if (other.DediplayerId != 0) {
        DediplayerId = other.DediplayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DediplayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_InformNewFaceInDedicatedServer : pb::IMessage<DSC_InformNewFaceInDedicatedServer> {
    private static readonly pb::MessageParser<DSC_InformNewFaceInDedicatedServer> _parser = new pb::MessageParser<DSC_InformNewFaceInDedicatedServer>(() => new DSC_InformNewFaceInDedicatedServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_InformNewFaceInDedicatedServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformNewFaceInDedicatedServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformNewFaceInDedicatedServer(DSC_InformNewFaceInDedicatedServer other) : this() {
      newPlayer_ = other.newPlayer_ != null ? other.newPlayer_.Clone() : null;
      spawnTransform_ = other.spawnTransform_ != null ? other.spawnTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformNewFaceInDedicatedServer Clone() {
      return new DSC_InformNewFaceInDedicatedServer(this);
    }

    /// <summary>Field number for the "newPlayer" field.</summary>
    public const int NewPlayerFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PlayerInfo newPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo NewPlayer {
      get { return newPlayer_; }
      set {
        newPlayer_ = value;
      }
    }

    /// <summary>Field number for the "spawnTransform" field.</summary>
    public const int SpawnTransformFieldNumber = 2;
    private global::Google.Protobuf.Protocol.TransformInfo spawnTransform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo SpawnTransform {
      get { return spawnTransform_; }
      set {
        spawnTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_InformNewFaceInDedicatedServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_InformNewFaceInDedicatedServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewPlayer, other.NewPlayer)) return false;
      if (!object.Equals(SpawnTransform, other.SpawnTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newPlayer_ != null) hash ^= NewPlayer.GetHashCode();
      if (spawnTransform_ != null) hash ^= SpawnTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newPlayer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewPlayer);
      }
      if (spawnTransform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SpawnTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewPlayer);
      }
      if (spawnTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_InformNewFaceInDedicatedServer other) {
      if (other == null) {
        return;
      }
      if (other.newPlayer_ != null) {
        if (newPlayer_ == null) {
          NewPlayer = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        NewPlayer.MergeFrom(other.NewPlayer);
      }
      if (other.spawnTransform_ != null) {
        if (spawnTransform_ == null) {
          SpawnTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        SpawnTransform.MergeFrom(other.SpawnTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newPlayer_ == null) {
              NewPlayer = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(NewPlayer);
            break;
          }
          case 18: {
            if (spawnTransform_ == null) {
              SpawnTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(SpawnTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_InformLeaveDedicatedServer : pb::IMessage<DSC_InformLeaveDedicatedServer> {
    private static readonly pb::MessageParser<DSC_InformLeaveDedicatedServer> _parser = new pb::MessageParser<DSC_InformLeaveDedicatedServer>(() => new DSC_InformLeaveDedicatedServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_InformLeaveDedicatedServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformLeaveDedicatedServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformLeaveDedicatedServer(DSC_InformLeaveDedicatedServer other) : this() {
      leavePlayerId_ = other.leavePlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_InformLeaveDedicatedServer Clone() {
      return new DSC_InformLeaveDedicatedServer(this);
    }

    /// <summary>Field number for the "leavePlayerId" field.</summary>
    public const int LeavePlayerIdFieldNumber = 1;
    private int leavePlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeavePlayerId {
      get { return leavePlayerId_; }
      set {
        leavePlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_InformLeaveDedicatedServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_InformLeaveDedicatedServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeavePlayerId != other.LeavePlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeavePlayerId != 0) hash ^= LeavePlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeavePlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LeavePlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeavePlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeavePlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_InformLeaveDedicatedServer other) {
      if (other == null) {
        return;
      }
      if (other.LeavePlayerId != 0) {
        LeavePlayerId = other.LeavePlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeavePlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_StartGame : pb::IMessage<DSC_StartGame> {
    private static readonly pb::MessageParser<DSC_StartGame> _parser = new pb::MessageParser<DSC_StartGame>(() => new DSC_StartGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_StartGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_StartGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_StartGame(DSC_StartGame other) : this() {
      items_ = other.items_;
      killers_ = other.killers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_StartGame Clone() {
      return new DSC_StartGame(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private string items_ = "";
    /// <summary>
    ///json 형식 아이템 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Items {
      get { return items_; }
      set {
        items_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "killers" field.</summary>
    public const int KillersFieldNumber = 2;
    private string killers_ = "";
    /// <summary>
    ///json 형식 킬러 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Killers {
      get { return killers_; }
      set {
        killers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_StartGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_StartGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Items != other.Items) return false;
      if (Killers != other.Killers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Items.Length != 0) hash ^= Items.GetHashCode();
      if (Killers.Length != 0) hash ^= Killers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Items.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Items);
      }
      if (Killers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Killers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Items.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Items);
      }
      if (Killers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Killers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_StartGame other) {
      if (other == null) {
        return;
      }
      if (other.Items.Length != 0) {
        Items = other.Items;
      }
      if (other.Killers.Length != 0) {
        Killers = other.Killers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Items = input.ReadString();
            break;
          }
          case 18: {
            Killers = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_Move : pb::IMessage<CDS_Move> {
    private static readonly pb::MessageParser<CDS_Move> _parser = new pb::MessageParser<CDS_Move>(() => new CDS_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_Move(CDS_Move other) : this() {
      dediplayerId_ = other.dediplayerId_;
      transformInfo_ = other.transformInfo_ != null ? other.transformInfo_.Clone() : null;
      keyboardInput_ = other.keyboardInput_;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_Move Clone() {
      return new CDS_Move(this);
    }

    /// <summary>Field number for the "dediplayerId" field.</summary>
    public const int DediplayerIdFieldNumber = 1;
    private int dediplayerId_;
    /// <summary>
    ///이거 아마 지워도될듯?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DediplayerId {
      get { return dediplayerId_; }
      set {
        dediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "transformInfo" field.</summary>
    public const int TransformInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.TransformInfo transformInfo_;
    /// <summary>
    ///플레이어의 transform 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo TransformInfo {
      get { return transformInfo_; }
      set {
        transformInfo_ = value;
      }
    }

    /// <summary>Field number for the "keyboardInput" field.</summary>
    public const int KeyboardInputFieldNumber = 3;
    private int keyboardInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KeyboardInput {
      get { return keyboardInput_; }
      set {
        keyboardInput_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 4;
    private global::Google.Protobuf.Protocol.Velocity velocity_;
    /// <summary>
    ///속도
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Velocity Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    ///서버시간으로 동기화된 타임스탬프 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DediplayerId != other.DediplayerId) return false;
      if (!object.Equals(TransformInfo, other.TransformInfo)) return false;
      if (KeyboardInput != other.KeyboardInput) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DediplayerId != 0) hash ^= DediplayerId.GetHashCode();
      if (transformInfo_ != null) hash ^= TransformInfo.GetHashCode();
      if (KeyboardInput != 0) hash ^= KeyboardInput.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DediplayerId);
      }
      if (transformInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransformInfo);
      }
      if (KeyboardInput != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KeyboardInput);
      }
      if (velocity_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Velocity);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DediplayerId);
      }
      if (transformInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformInfo);
      }
      if (KeyboardInput != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyboardInput);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_Move other) {
      if (other == null) {
        return;
      }
      if (other.DediplayerId != 0) {
        DediplayerId = other.DediplayerId;
      }
      if (other.transformInfo_ != null) {
        if (transformInfo_ == null) {
          TransformInfo = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        TransformInfo.MergeFrom(other.TransformInfo);
      }
      if (other.KeyboardInput != 0) {
        KeyboardInput = other.KeyboardInput;
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::Google.Protobuf.Protocol.Velocity();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DediplayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (transformInfo_ == null) {
              TransformInfo = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(TransformInfo);
            break;
          }
          case 24: {
            KeyboardInput = input.ReadInt32();
            break;
          }
          case 34: {
            if (velocity_ == null) {
              Velocity = new global::Google.Protobuf.Protocol.Velocity();
            }
            input.ReadMessage(Velocity);
            break;
          }
          case 42: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_Move : pb::IMessage<DSC_Move> {
    private static readonly pb::MessageParser<DSC_Move> _parser = new pb::MessageParser<DSC_Move>(() => new DSC_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_Move(DSC_Move other) : this() {
      dediplayerId_ = other.dediplayerId_;
      transformInfo_ = other.transformInfo_ != null ? other.transformInfo_.Clone() : null;
      keyboardInput_ = other.keyboardInput_;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_Move Clone() {
      return new DSC_Move(this);
    }

    /// <summary>Field number for the "dediplayerId" field.</summary>
    public const int DediplayerIdFieldNumber = 1;
    private int dediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DediplayerId {
      get { return dediplayerId_; }
      set {
        dediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "transformInfo" field.</summary>
    public const int TransformInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.TransformInfo transformInfo_;
    /// <summary>
    ///transform 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo TransformInfo {
      get { return transformInfo_; }
      set {
        transformInfo_ = value;
      }
    }

    /// <summary>Field number for the "keyboardInput" field.</summary>
    public const int KeyboardInputFieldNumber = 3;
    private int keyboardInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KeyboardInput {
      get { return keyboardInput_; }
      set {
        keyboardInput_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 4;
    private global::Google.Protobuf.Protocol.Velocity velocity_;
    /// <summary>
    ///속도
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Velocity Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    ///서버시간으로 동기화된 타임스탬프 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DediplayerId != other.DediplayerId) return false;
      if (!object.Equals(TransformInfo, other.TransformInfo)) return false;
      if (KeyboardInput != other.KeyboardInput) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DediplayerId != 0) hash ^= DediplayerId.GetHashCode();
      if (transformInfo_ != null) hash ^= TransformInfo.GetHashCode();
      if (KeyboardInput != 0) hash ^= KeyboardInput.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DediplayerId);
      }
      if (transformInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransformInfo);
      }
      if (KeyboardInput != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KeyboardInput);
      }
      if (velocity_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Velocity);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DediplayerId);
      }
      if (transformInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformInfo);
      }
      if (KeyboardInput != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyboardInput);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_Move other) {
      if (other == null) {
        return;
      }
      if (other.DediplayerId != 0) {
        DediplayerId = other.DediplayerId;
      }
      if (other.transformInfo_ != null) {
        if (transformInfo_ == null) {
          TransformInfo = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        TransformInfo.MergeFrom(other.TransformInfo);
      }
      if (other.KeyboardInput != 0) {
        KeyboardInput = other.KeyboardInput;
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::Google.Protobuf.Protocol.Velocity();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DediplayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (transformInfo_ == null) {
              TransformInfo = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(TransformInfo);
            break;
          }
          case 24: {
            KeyboardInput = input.ReadInt32();
            break;
          }
          case 34: {
            if (velocity_ == null) {
              Velocity = new global::Google.Protobuf.Protocol.Velocity();
            }
            input.ReadMessage(Velocity);
            break;
          }
          case 42: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_DayTimerStart : pb::IMessage<DSC_DayTimerStart> {
    private static readonly pb::MessageParser<DSC_DayTimerStart> _parser = new pb::MessageParser<DSC_DayTimerStart>(() => new DSC_DayTimerStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_DayTimerStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerStart(DSC_DayTimerStart other) : this() {
      daySeconds_ = other.daySeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerStart Clone() {
      return new DSC_DayTimerStart(this);
    }

    /// <summary>Field number for the "daySeconds" field.</summary>
    public const int DaySecondsFieldNumber = 1;
    private int daySeconds_;
    /// <summary>
    ///낮 시간(초)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DaySeconds {
      get { return daySeconds_; }
      set {
        daySeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_DayTimerStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_DayTimerStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DaySeconds != other.DaySeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DaySeconds != 0) hash ^= DaySeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DaySeconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DaySeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DaySeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DaySeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_DayTimerStart other) {
      if (other == null) {
        return;
      }
      if (other.DaySeconds != 0) {
        DaySeconds = other.DaySeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DaySeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_DayTimerSync : pb::IMessage<DSC_DayTimerSync> {
    private static readonly pb::MessageParser<DSC_DayTimerSync> _parser = new pb::MessageParser<DSC_DayTimerSync>(() => new DSC_DayTimerSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_DayTimerSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerSync(DSC_DayTimerSync other) : this() {
      currentServerTimer_ = other.currentServerTimer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerSync Clone() {
      return new DSC_DayTimerSync(this);
    }

    /// <summary>Field number for the "currentServerTimer" field.</summary>
    public const int CurrentServerTimerFieldNumber = 1;
    private float currentServerTimer_;
    /// <summary>
    ///서버의 현재 타이머 시간
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CurrentServerTimer {
      get { return currentServerTimer_; }
      set {
        currentServerTimer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_DayTimerSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_DayTimerSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentServerTimer, other.CurrentServerTimer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentServerTimer != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentServerTimer);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentServerTimer != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CurrentServerTimer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentServerTimer != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_DayTimerSync other) {
      if (other == null) {
        return;
      }
      if (other.CurrentServerTimer != 0F) {
        CurrentServerTimer = other.CurrentServerTimer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CurrentServerTimer = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_DayTimerEnd : pb::IMessage<DSC_DayTimerEnd> {
    private static readonly pb::MessageParser<DSC_DayTimerEnd> _parser = new pb::MessageParser<DSC_DayTimerEnd>(() => new DSC_DayTimerEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_DayTimerEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerEnd(DSC_DayTimerEnd other) : this() {
      killerPlayerId_ = other.killerPlayerId_;
      killerType_ = other.killerType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_DayTimerEnd Clone() {
      return new DSC_DayTimerEnd(this);
    }

    /// <summary>Field number for the "killerPlayerId" field.</summary>
    public const int KillerPlayerIdFieldNumber = 1;
    private int killerPlayerId_;
    /// <summary>
    ///킬러 플레이어의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerPlayerId {
      get { return killerPlayerId_; }
      set {
        killerPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "killerType" field.</summary>
    public const int KillerTypeFieldNumber = 2;
    private int killerType_;
    /// <summary>
    ///어떤 종류의 킬러인지를 나타내는 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerType {
      get { return killerType_; }
      set {
        killerType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_DayTimerEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_DayTimerEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KillerPlayerId != other.KillerPlayerId) return false;
      if (KillerType != other.KillerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KillerPlayerId != 0) hash ^= KillerPlayerId.GetHashCode();
      if (KillerType != 0) hash ^= KillerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KillerPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KillerPlayerId);
      }
      if (KillerType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KillerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KillerPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerPlayerId);
      }
      if (KillerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_DayTimerEnd other) {
      if (other == null) {
        return;
      }
      if (other.KillerPlayerId != 0) {
        KillerPlayerId = other.KillerPlayerId;
      }
      if (other.KillerType != 0) {
        KillerType = other.KillerType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KillerPlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            KillerType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_NightTimerStart : pb::IMessage<DSC_NightTimerStart> {
    private static readonly pb::MessageParser<DSC_NightTimerStart> _parser = new pb::MessageParser<DSC_NightTimerStart>(() => new DSC_NightTimerStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_NightTimerStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerStart(DSC_NightTimerStart other) : this() {
      nightSeconds_ = other.nightSeconds_;
      gaugeMax_ = other.gaugeMax_;
      playerGaugeDecreasePerSecond_ = other.playerGaugeDecreasePerSecond_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerStart Clone() {
      return new DSC_NightTimerStart(this);
    }

    /// <summary>Field number for the "nightSeconds" field.</summary>
    public const int NightSecondsFieldNumber = 1;
    private int nightSeconds_;
    /// <summary>
    ///밤 시간(초)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NightSeconds {
      get { return nightSeconds_; }
      set {
        nightSeconds_ = value;
      }
    }

    /// <summary>Field number for the "gaugeMax" field.</summary>
    public const int GaugeMaxFieldNumber = 2;
    private float gaugeMax_;
    /// <summary>
    ///게이지 최대값
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GaugeMax {
      get { return gaugeMax_; }
      set {
        gaugeMax_ = value;
      }
    }

    /// <summary>Field number for the "playerGaugeDecreasePerSecond" field.</summary>
    public const int PlayerGaugeDecreasePerSecondFieldNumber = 3;
    private static readonly pbc::MapField<int, float>.Codec _map_playerGaugeDecreasePerSecond_codec
        = new pbc::MapField<int, float>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForFloat(21, 0F), 26);
    private readonly pbc::MapField<int, float> playerGaugeDecreasePerSecond_ = new pbc::MapField<int, float>();
    /// <summary>
    ///플레이어id, 초당 게이지 감소량
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, float> PlayerGaugeDecreasePerSecond {
      get { return playerGaugeDecreasePerSecond_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_NightTimerStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_NightTimerStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NightSeconds != other.NightSeconds) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GaugeMax, other.GaugeMax)) return false;
      if (!PlayerGaugeDecreasePerSecond.Equals(other.PlayerGaugeDecreasePerSecond)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NightSeconds != 0) hash ^= NightSeconds.GetHashCode();
      if (GaugeMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GaugeMax);
      hash ^= PlayerGaugeDecreasePerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NightSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NightSeconds);
      }
      if (GaugeMax != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(GaugeMax);
      }
      playerGaugeDecreasePerSecond_.WriteTo(output, _map_playerGaugeDecreasePerSecond_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NightSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NightSeconds);
      }
      if (GaugeMax != 0F) {
        size += 1 + 4;
      }
      size += playerGaugeDecreasePerSecond_.CalculateSize(_map_playerGaugeDecreasePerSecond_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_NightTimerStart other) {
      if (other == null) {
        return;
      }
      if (other.NightSeconds != 0) {
        NightSeconds = other.NightSeconds;
      }
      if (other.GaugeMax != 0F) {
        GaugeMax = other.GaugeMax;
      }
      playerGaugeDecreasePerSecond_.Add(other.playerGaugeDecreasePerSecond_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NightSeconds = input.ReadInt32();
            break;
          }
          case 21: {
            GaugeMax = input.ReadFloat();
            break;
          }
          case 26: {
            playerGaugeDecreasePerSecond_.AddEntriesFrom(input, _map_playerGaugeDecreasePerSecond_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_NightTimerSync : pb::IMessage<DSC_NightTimerSync> {
    private static readonly pb::MessageParser<DSC_NightTimerSync> _parser = new pb::MessageParser<DSC_NightTimerSync>(() => new DSC_NightTimerSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_NightTimerSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerSync(DSC_NightTimerSync other) : this() {
      currentServerTimer_ = other.currentServerTimer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerSync Clone() {
      return new DSC_NightTimerSync(this);
    }

    /// <summary>Field number for the "currentServerTimer" field.</summary>
    public const int CurrentServerTimerFieldNumber = 1;
    private float currentServerTimer_;
    /// <summary>
    ///서버의 현재 타이머 시간
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CurrentServerTimer {
      get { return currentServerTimer_; }
      set {
        currentServerTimer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_NightTimerSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_NightTimerSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentServerTimer, other.CurrentServerTimer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentServerTimer != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentServerTimer);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentServerTimer != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CurrentServerTimer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentServerTimer != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_NightTimerSync other) {
      if (other == null) {
        return;
      }
      if (other.CurrentServerTimer != 0F) {
        CurrentServerTimer = other.CurrentServerTimer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CurrentServerTimer = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_NightTimerEnd : pb::IMessage<DSC_NightTimerEnd> {
    private static readonly pb::MessageParser<DSC_NightTimerEnd> _parser = new pb::MessageParser<DSC_NightTimerEnd>(() => new DSC_NightTimerEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_NightTimerEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerEnd(DSC_NightTimerEnd other) : this() {
      deathCause_ = other.deathCause_;
      deathPlayerId_ = other.deathPlayerId_;
      killerPlayerId_ = other.killerPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NightTimerEnd Clone() {
      return new DSC_NightTimerEnd(this);
    }

    /// <summary>Field number for the "deathCause" field.</summary>
    public const int DeathCauseFieldNumber = 1;
    private global::Google.Protobuf.Protocol.DeathCause deathCause_ = global::Google.Protobuf.Protocol.DeathCause.TimeOver;
    /// <summary>
    ///죽은 이유
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.DeathCause DeathCause {
      get { return deathCause_; }
      set {
        deathCause_ = value;
      }
    }

    /// <summary>Field number for the "deathPlayerId" field.</summary>
    public const int DeathPlayerIdFieldNumber = 2;
    private int deathPlayerId_;
    /// <summary>
    ///죽은 플레이어의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeathPlayerId {
      get { return deathPlayerId_; }
      set {
        deathPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "killerPlayerId" field.</summary>
    public const int KillerPlayerIdFieldNumber = 3;
    private int killerPlayerId_;
    /// <summary>
    ///마지막 킬러 플레이어의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerPlayerId {
      get { return killerPlayerId_; }
      set {
        killerPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_NightTimerEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_NightTimerEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeathCause != other.DeathCause) return false;
      if (DeathPlayerId != other.DeathPlayerId) return false;
      if (KillerPlayerId != other.KillerPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeathCause != global::Google.Protobuf.Protocol.DeathCause.TimeOver) hash ^= DeathCause.GetHashCode();
      if (DeathPlayerId != 0) hash ^= DeathPlayerId.GetHashCode();
      if (KillerPlayerId != 0) hash ^= KillerPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeathCause != global::Google.Protobuf.Protocol.DeathCause.TimeOver) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DeathCause);
      }
      if (DeathPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DeathPlayerId);
      }
      if (KillerPlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KillerPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeathCause != global::Google.Protobuf.Protocol.DeathCause.TimeOver) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeathCause);
      }
      if (DeathPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeathPlayerId);
      }
      if (KillerPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_NightTimerEnd other) {
      if (other == null) {
        return;
      }
      if (other.DeathCause != global::Google.Protobuf.Protocol.DeathCause.TimeOver) {
        DeathCause = other.DeathCause;
      }
      if (other.DeathPlayerId != 0) {
        DeathPlayerId = other.DeathPlayerId;
      }
      if (other.KillerPlayerId != 0) {
        KillerPlayerId = other.KillerPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeathCause = (global::Google.Protobuf.Protocol.DeathCause) input.ReadEnum();
            break;
          }
          case 16: {
            DeathPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            KillerPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_NewChestsInfo : pb::IMessage<DSC_NewChestsInfo> {
    private static readonly pb::MessageParser<DSC_NewChestsInfo> _parser = new pb::MessageParser<DSC_NewChestsInfo>(() => new DSC_NewChestsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_NewChestsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewChestsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewChestsInfo(DSC_NewChestsInfo other) : this() {
      chestsInfo_ = other.chestsInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewChestsInfo Clone() {
      return new DSC_NewChestsInfo(this);
    }

    /// <summary>Field number for the "chestsInfo" field.</summary>
    public const int ChestsInfoFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Google.Protobuf.Protocol.ChestInfo>.Codec _map_chestsInfo_codec
        = new pbc::MapField<int, global::Google.Protobuf.Protocol.ChestInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.ChestInfo.Parser), 10);
    private readonly pbc::MapField<int, global::Google.Protobuf.Protocol.ChestInfo> chestsInfo_ = new pbc::MapField<int, global::Google.Protobuf.Protocol.ChestInfo>();
    /// <summary>
    ///상자들의 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Google.Protobuf.Protocol.ChestInfo> ChestsInfo {
      get { return chestsInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_NewChestsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_NewChestsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ChestsInfo.Equals(other.ChestsInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ChestsInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chestsInfo_.WriteTo(output, _map_chestsInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chestsInfo_.CalculateSize(_map_chestsInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_NewChestsInfo other) {
      if (other == null) {
        return;
      }
      chestsInfo_.Add(other.chestsInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chestsInfo_.AddEntriesFrom(input, _map_chestsInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_TryChestOpen : pb::IMessage<CDS_TryChestOpen> {
    private static readonly pb::MessageParser<CDS_TryChestOpen> _parser = new pb::MessageParser<CDS_TryChestOpen>(() => new CDS_TryChestOpen());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_TryChestOpen> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_TryChestOpen() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_TryChestOpen(CDS_TryChestOpen other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      chestId_ = other.chestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_TryChestOpen Clone() {
      return new CDS_TryChestOpen(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "chestId" field.</summary>
    public const int ChestIdFieldNumber = 2;
    private int chestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_TryChestOpen);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_TryChestOpen other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ChestId != other.ChestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ChestId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_TryChestOpen other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ChestId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_ChestOpenSuccess : pb::IMessage<DSC_ChestOpenSuccess> {
    private static readonly pb::MessageParser<DSC_ChestOpenSuccess> _parser = new pb::MessageParser<DSC_ChestOpenSuccess>(() => new DSC_ChestOpenSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_ChestOpenSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ChestOpenSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ChestOpenSuccess(DSC_ChestOpenSuccess other) : this() {
      chestId_ = other.chestId_;
      playerId_ = other.playerId_;
      getPoint_ = other.getPoint_;
      totalPoint_ = other.totalPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ChestOpenSuccess Clone() {
      return new DSC_ChestOpenSuccess(this);
    }

    /// <summary>Field number for the "chestId" field.</summary>
    public const int ChestIdFieldNumber = 1;
    private int chestId_;
    /// <summary>
    ///열린 상자의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    /// <summary>
    ///상자를 열은 플레이어의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "getPoint" field.</summary>
    public const int GetPointFieldNumber = 3;
    private int getPoint_;
    /// <summary>
    ///얻은 포인트
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetPoint {
      get { return getPoint_; }
      set {
        getPoint_ = value;
      }
    }

    /// <summary>Field number for the "totalPoint" field.</summary>
    public const int TotalPointFieldNumber = 4;
    private int totalPoint_;
    /// <summary>
    ///총 포인트
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPoint {
      get { return totalPoint_; }
      set {
        totalPoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_ChestOpenSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_ChestOpenSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChestId != other.ChestId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (GetPoint != other.GetPoint) return false;
      if (TotalPoint != other.TotalPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (GetPoint != 0) hash ^= GetPoint.GetHashCode();
      if (TotalPoint != 0) hash ^= TotalPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChestId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChestId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (GetPoint != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GetPoint);
      }
      if (TotalPoint != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (GetPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetPoint);
      }
      if (TotalPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_ChestOpenSuccess other) {
      if (other == null) {
        return;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.GetPoint != 0) {
        GetPoint = other.GetPoint;
      }
      if (other.TotalPoint != 0) {
        TotalPoint = other.TotalPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChestId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            GetPoint = input.ReadInt32();
            break;
          }
          case 32: {
            TotalPoint = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_RequestTimestamp : pb::IMessage<CDS_RequestTimestamp> {
    private static readonly pb::MessageParser<CDS_RequestTimestamp> _parser = new pb::MessageParser<CDS_RequestTimestamp>(() => new CDS_RequestTimestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_RequestTimestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestTimestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestTimestamp(CDS_RequestTimestamp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestTimestamp Clone() {
      return new CDS_RequestTimestamp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_RequestTimestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_RequestTimestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_RequestTimestamp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DSC_ResponseTimestamp : pb::IMessage<DSC_ResponseTimestamp> {
    private static readonly pb::MessageParser<DSC_ResponseTimestamp> _parser = new pb::MessageParser<DSC_ResponseTimestamp>(() => new DSC_ResponseTimestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_ResponseTimestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ResponseTimestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ResponseTimestamp(DSC_ResponseTimestamp other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ResponseTimestamp Clone() {
      return new DSC_ResponseTimestamp(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_ResponseTimestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_ResponseTimestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_ResponseTimestamp other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_GaugeSync : pb::IMessage<DSC_GaugeSync> {
    private static readonly pb::MessageParser<DSC_GaugeSync> _parser = new pb::MessageParser<DSC_GaugeSync>(() => new DSC_GaugeSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_GaugeSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GaugeSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GaugeSync(DSC_GaugeSync other) : this() {
      playerGauges_ = other.playerGauges_.Clone();
      playerGaugeDecreasePerSecond_ = other.playerGaugeDecreasePerSecond_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GaugeSync Clone() {
      return new DSC_GaugeSync(this);
    }

    /// <summary>Field number for the "playerGauges" field.</summary>
    public const int PlayerGaugesFieldNumber = 1;
    private static readonly pbc::MapField<int, float>.Codec _map_playerGauges_codec
        = new pbc::MapField<int, float>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForFloat(21, 0F), 10);
    private readonly pbc::MapField<int, float> playerGauges_ = new pbc::MapField<int, float>();
    /// <summary>
    ///플레이어id, 게이지
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, float> PlayerGauges {
      get { return playerGauges_; }
    }

    /// <summary>Field number for the "playerGaugeDecreasePerSecond" field.</summary>
    public const int PlayerGaugeDecreasePerSecondFieldNumber = 2;
    private static readonly pbc::MapField<int, float>.Codec _map_playerGaugeDecreasePerSecond_codec
        = new pbc::MapField<int, float>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForFloat(21, 0F), 18);
    private readonly pbc::MapField<int, float> playerGaugeDecreasePerSecond_ = new pbc::MapField<int, float>();
    /// <summary>
    ///플레이어id, 초당 게이지 감소량
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, float> PlayerGaugeDecreasePerSecond {
      get { return playerGaugeDecreasePerSecond_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_GaugeSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_GaugeSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PlayerGauges.Equals(other.PlayerGauges)) return false;
      if (!PlayerGaugeDecreasePerSecond.Equals(other.PlayerGaugeDecreasePerSecond)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PlayerGauges.GetHashCode();
      hash ^= PlayerGaugeDecreasePerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerGauges_.WriteTo(output, _map_playerGauges_codec);
      playerGaugeDecreasePerSecond_.WriteTo(output, _map_playerGaugeDecreasePerSecond_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerGauges_.CalculateSize(_map_playerGauges_codec);
      size += playerGaugeDecreasePerSecond_.CalculateSize(_map_playerGaugeDecreasePerSecond_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_GaugeSync other) {
      if (other == null) {
        return;
      }
      playerGauges_.Add(other.playerGauges_);
      playerGaugeDecreasePerSecond_.Add(other.playerGaugeDecreasePerSecond_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerGauges_.AddEntriesFrom(input, _map_playerGauges_codec);
            break;
          }
          case 18: {
            playerGaugeDecreasePerSecond_.AddEntriesFrom(input, _map_playerGaugeDecreasePerSecond_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_NewCleansesInfo : pb::IMessage<DSC_NewCleansesInfo> {
    private static readonly pb::MessageParser<DSC_NewCleansesInfo> _parser = new pb::MessageParser<DSC_NewCleansesInfo>(() => new DSC_NewCleansesInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_NewCleansesInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewCleansesInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewCleansesInfo(DSC_NewCleansesInfo other) : this() {
      cleanses_ = other.cleanses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_NewCleansesInfo Clone() {
      return new DSC_NewCleansesInfo(this);
    }

    /// <summary>Field number for the "cleanses" field.</summary>
    public const int CleansesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.CleanseInfo> _repeated_cleanses_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.CleanseInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.CleanseInfo> cleanses_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.CleanseInfo>();
    /// <summary>
    ///정화 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.CleanseInfo> Cleanses {
      get { return cleanses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_NewCleansesInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_NewCleansesInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cleanses_.Equals(other.cleanses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cleanses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cleanses_.WriteTo(output, _repeated_cleanses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cleanses_.CalculateSize(_repeated_cleanses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_NewCleansesInfo other) {
      if (other == null) {
        return;
      }
      cleanses_.Add(other.cleanses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cleanses_.AddEntriesFrom(input, _repeated_cleanses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_RequestCleansePermission : pb::IMessage<CDS_RequestCleansePermission> {
    private static readonly pb::MessageParser<CDS_RequestCleansePermission> _parser = new pb::MessageParser<CDS_RequestCleansePermission>(() => new CDS_RequestCleansePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_RequestCleansePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestCleansePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestCleansePermission(CDS_RequestCleansePermission other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_RequestCleansePermission Clone() {
      return new CDS_RequestCleansePermission(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_RequestCleansePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_RequestCleansePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_RequestCleansePermission other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_GiveCleansePermission : pb::IMessage<DSC_GiveCleansePermission> {
    private static readonly pb::MessageParser<DSC_GiveCleansePermission> _parser = new pb::MessageParser<DSC_GiveCleansePermission>(() => new DSC_GiveCleansePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_GiveCleansePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GiveCleansePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GiveCleansePermission(DSC_GiveCleansePermission other) : this() {
      playerId_ = other.playerId_;
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_GiveCleansePermission Clone() {
      return new DSC_GiveCleansePermission(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_GiveCleansePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_GiveCleansePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_GiveCleansePermission other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_CleanseQuit : pb::IMessage<CDS_CleanseQuit> {
    private static readonly pb::MessageParser<CDS_CleanseQuit> _parser = new pb::MessageParser<CDS_CleanseQuit>(() => new CDS_CleanseQuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_CleanseQuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseQuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseQuit(CDS_CleanseQuit other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseQuit Clone() {
      return new CDS_CleanseQuit(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_CleanseQuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_CleanseQuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_CleanseQuit other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_CleanseQuit : pb::IMessage<DSC_CleanseQuit> {
    private static readonly pb::MessageParser<DSC_CleanseQuit> _parser = new pb::MessageParser<DSC_CleanseQuit>(() => new DSC_CleanseQuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_CleanseQuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseQuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseQuit(DSC_CleanseQuit other) : this() {
      playerId_ = other.playerId_;
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseQuit Clone() {
      return new DSC_CleanseQuit(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_CleanseQuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_CleanseQuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_CleanseQuit other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_CleanseSuccess : pb::IMessage<CDS_CleanseSuccess> {
    private static readonly pb::MessageParser<CDS_CleanseSuccess> _parser = new pb::MessageParser<CDS_CleanseSuccess>(() => new CDS_CleanseSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_CleanseSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseSuccess(CDS_CleanseSuccess other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_CleanseSuccess Clone() {
      return new CDS_CleanseSuccess(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_CleanseSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_CleanseSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_CleanseSuccess other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_CleanseSuccess : pb::IMessage<DSC_CleanseSuccess> {
    private static readonly pb::MessageParser<DSC_CleanseSuccess> _parser = new pb::MessageParser<DSC_CleanseSuccess>(() => new DSC_CleanseSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_CleanseSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseSuccess(DSC_CleanseSuccess other) : this() {
      playerId_ = other.playerId_;
      cleanseId_ = other.cleanseId_;
      Gauge_ = other.Gauge_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseSuccess Clone() {
      return new DSC_CleanseSuccess(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 2;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    /// <summary>Field number for the "_gauge" field.</summary>
    public const int GaugeFieldNumber = 3;
    private float Gauge_;
    /// <summary>
    ///성공한 후 게이지
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Gauge {
      get { return Gauge_; }
      set {
        Gauge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_CleanseSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_CleanseSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (CleanseId != other.CleanseId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Gauge, other.Gauge)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (Gauge != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Gauge);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (CleanseId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CleanseId);
      }
      if (Gauge != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Gauge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (Gauge != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_CleanseSuccess other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      if (other.Gauge != 0F) {
        Gauge = other.Gauge;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            CleanseId = input.ReadInt32();
            break;
          }
          case 29: {
            Gauge = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_CleanseCooltimeFinish : pb::IMessage<DSC_CleanseCooltimeFinish> {
    private static readonly pb::MessageParser<DSC_CleanseCooltimeFinish> _parser = new pb::MessageParser<DSC_CleanseCooltimeFinish>(() => new DSC_CleanseCooltimeFinish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_CleanseCooltimeFinish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseCooltimeFinish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseCooltimeFinish(DSC_CleanseCooltimeFinish other) : this() {
      cleanseId_ = other.cleanseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_CleanseCooltimeFinish Clone() {
      return new DSC_CleanseCooltimeFinish(this);
    }

    /// <summary>Field number for the "cleanseId" field.</summary>
    public const int CleanseIdFieldNumber = 1;
    private int cleanseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CleanseId {
      get { return cleanseId_; }
      set {
        cleanseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_CleanseCooltimeFinish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_CleanseCooltimeFinish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CleanseId != other.CleanseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CleanseId != 0) hash ^= CleanseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CleanseId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CleanseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CleanseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CleanseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_CleanseCooltimeFinish other) {
      if (other == null) {
        return;
      }
      if (other.CleanseId != 0) {
        CleanseId = other.CleanseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CleanseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_ItemBuyRequest : pb::IMessage<CDS_ItemBuyRequest> {
    private static readonly pb::MessageParser<CDS_ItemBuyRequest> _parser = new pb::MessageParser<CDS_ItemBuyRequest>(() => new CDS_ItemBuyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_ItemBuyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_ItemBuyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_ItemBuyRequest(CDS_ItemBuyRequest other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_ItemBuyRequest Clone() {
      return new CDS_ItemBuyRequest(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_ItemBuyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_ItemBuyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_ItemBuyRequest other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_ItemBuyResult : pb::IMessage<DSC_ItemBuyResult> {
    private static readonly pb::MessageParser<DSC_ItemBuyResult> _parser = new pb::MessageParser<DSC_ItemBuyResult>(() => new DSC_ItemBuyResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_ItemBuyResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ItemBuyResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ItemBuyResult(DSC_ItemBuyResult other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      itemTotalCount_ = other.itemTotalCount_;
      isSuccess_ = other.isSuccess_;
      remainMoney_ = other.remainMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_ItemBuyResult Clone() {
      return new DSC_ItemBuyResult(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "itemTotalCount" field.</summary>
    public const int ItemTotalCountFieldNumber = 3;
    private int itemTotalCount_;
    /// <summary>
    ///클라가 가진 해당 아이템의 총 갯수
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemTotalCount {
      get { return itemTotalCount_; }
      set {
        itemTotalCount_ = value;
      }
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 4;
    private bool isSuccess_;
    /// <summary>
    ///구매 성공 여부
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "remainMoney" field.</summary>
    public const int RemainMoneyFieldNumber = 5;
    private int remainMoney_;
    /// <summary>
    ///남은 돈
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainMoney {
      get { return remainMoney_; }
      set {
        remainMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_ItemBuyResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_ItemBuyResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (ItemTotalCount != other.ItemTotalCount) return false;
      if (IsSuccess != other.IsSuccess) return false;
      if (RemainMoney != other.RemainMoney) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemTotalCount != 0) hash ^= ItemTotalCount.GetHashCode();
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (RemainMoney != 0) hash ^= RemainMoney.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (ItemTotalCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemTotalCount);
      }
      if (IsSuccess != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSuccess);
      }
      if (RemainMoney != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RemainMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemTotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemTotalCount);
      }
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (RemainMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainMoney);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_ItemBuyResult other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemTotalCount != 0) {
        ItemTotalCount = other.ItemTotalCount;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.RemainMoney != 0) {
        RemainMoney = other.RemainMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemTotalCount = input.ReadInt32();
            break;
          }
          case 32: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 40: {
            RemainMoney = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_OnHoldItem : pb::IMessage<CDS_OnHoldItem> {
    private static readonly pb::MessageParser<CDS_OnHoldItem> _parser = new pb::MessageParser<CDS_OnHoldItem>(() => new CDS_OnHoldItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_OnHoldItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_OnHoldItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_OnHoldItem(CDS_OnHoldItem other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_OnHoldItem Clone() {
      return new CDS_OnHoldItem(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_OnHoldItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_OnHoldItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_OnHoldItem other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_OnHoldItem : pb::IMessage<DSC_OnHoldItem> {
    private static readonly pb::MessageParser<DSC_OnHoldItem> _parser = new pb::MessageParser<DSC_OnHoldItem>(() => new DSC_OnHoldItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_OnHoldItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_OnHoldItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_OnHoldItem(DSC_OnHoldItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_OnHoldItem Clone() {
      return new DSC_OnHoldItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_OnHoldItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_OnHoldItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_OnHoldItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseDashItem : pb::IMessage<CDS_UseDashItem> {
    private static readonly pb::MessageParser<CDS_UseDashItem> _parser = new pb::MessageParser<CDS_UseDashItem>(() => new CDS_UseDashItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseDashItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDashItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDashItem(CDS_UseDashItem other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      dashStartingTransform_ = other.dashStartingTransform_ != null ? other.dashStartingTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDashItem Clone() {
      return new CDS_UseDashItem(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "dashStartingTransform" field.</summary>
    public const int DashStartingTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo dashStartingTransform_;
    /// <summary>
    ///대쉬 시작 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo DashStartingTransform {
      get { return dashStartingTransform_; }
      set {
        dashStartingTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseDashItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseDashItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(DashStartingTransform, other.DashStartingTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (dashStartingTransform_ != null) hash ^= DashStartingTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (dashStartingTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DashStartingTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (dashStartingTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DashStartingTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseDashItem other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.dashStartingTransform_ != null) {
        if (dashStartingTransform_ == null) {
          DashStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        DashStartingTransform.MergeFrom(other.DashStartingTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (dashStartingTransform_ == null) {
              DashStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(DashStartingTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseDashItem : pb::IMessage<DSC_UseDashItem> {
    private static readonly pb::MessageParser<DSC_UseDashItem> _parser = new pb::MessageParser<DSC_UseDashItem>(() => new DSC_UseDashItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseDashItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDashItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDashItem(DSC_UseDashItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      dashStartingTransform_ = other.dashStartingTransform_ != null ? other.dashStartingTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDashItem Clone() {
      return new DSC_UseDashItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "dashStartingTransform" field.</summary>
    public const int DashStartingTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo dashStartingTransform_;
    /// <summary>
    ///대쉬 시작 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo DashStartingTransform {
      get { return dashStartingTransform_; }
      set {
        dashStartingTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseDashItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseDashItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(DashStartingTransform, other.DashStartingTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (dashStartingTransform_ != null) hash ^= DashStartingTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (dashStartingTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DashStartingTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (dashStartingTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DashStartingTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseDashItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.dashStartingTransform_ != null) {
        if (dashStartingTransform_ == null) {
          DashStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        DashStartingTransform.MergeFrom(other.DashStartingTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (dashStartingTransform_ == null) {
              DashStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(DashStartingTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_EndDashItem : pb::IMessage<DSC_EndDashItem> {
    private static readonly pb::MessageParser<DSC_EndDashItem> _parser = new pb::MessageParser<DSC_EndDashItem>(() => new DSC_EndDashItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_EndDashItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndDashItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndDashItem(DSC_EndDashItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      dashEndTransform_ = other.dashEndTransform_ != null ? other.dashEndTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndDashItem Clone() {
      return new DSC_EndDashItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "dashEndTransform" field.</summary>
    public const int DashEndTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo dashEndTransform_;
    /// <summary>
    ///대쉬 끝 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo DashEndTransform {
      get { return dashEndTransform_; }
      set {
        dashEndTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_EndDashItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_EndDashItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(DashEndTransform, other.DashEndTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (dashEndTransform_ != null) hash ^= DashEndTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (dashEndTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DashEndTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (dashEndTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DashEndTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_EndDashItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.dashEndTransform_ != null) {
        if (dashEndTransform_ == null) {
          DashEndTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        DashEndTransform.MergeFrom(other.DashEndTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (dashEndTransform_ == null) {
              DashEndTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(DashEndTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseFireworkItem : pb::IMessage<CDS_UseFireworkItem> {
    private static readonly pb::MessageParser<CDS_UseFireworkItem> _parser = new pb::MessageParser<CDS_UseFireworkItem>(() => new CDS_UseFireworkItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseFireworkItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseFireworkItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseFireworkItem(CDS_UseFireworkItem other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      fireworkStartingTransform_ = other.fireworkStartingTransform_ != null ? other.fireworkStartingTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseFireworkItem Clone() {
      return new CDS_UseFireworkItem(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "fireworkStartingTransform" field.</summary>
    public const int FireworkStartingTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo fireworkStartingTransform_;
    /// <summary>
    ///폭죽 시작 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo FireworkStartingTransform {
      get { return fireworkStartingTransform_; }
      set {
        fireworkStartingTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseFireworkItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseFireworkItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(FireworkStartingTransform, other.FireworkStartingTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (fireworkStartingTransform_ != null) hash ^= FireworkStartingTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (fireworkStartingTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FireworkStartingTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (fireworkStartingTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FireworkStartingTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseFireworkItem other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.fireworkStartingTransform_ != null) {
        if (fireworkStartingTransform_ == null) {
          FireworkStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        FireworkStartingTransform.MergeFrom(other.FireworkStartingTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (fireworkStartingTransform_ == null) {
              FireworkStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(FireworkStartingTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseFireworkItem : pb::IMessage<DSC_UseFireworkItem> {
    private static readonly pb::MessageParser<DSC_UseFireworkItem> _parser = new pb::MessageParser<DSC_UseFireworkItem>(() => new DSC_UseFireworkItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseFireworkItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseFireworkItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseFireworkItem(DSC_UseFireworkItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      fireworkStartingTransform_ = other.fireworkStartingTransform_ != null ? other.fireworkStartingTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseFireworkItem Clone() {
      return new DSC_UseFireworkItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "fireworkStartingTransform" field.</summary>
    public const int FireworkStartingTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo fireworkStartingTransform_;
    /// <summary>
    ///폭죽 시작 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo FireworkStartingTransform {
      get { return fireworkStartingTransform_; }
      set {
        fireworkStartingTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseFireworkItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseFireworkItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(FireworkStartingTransform, other.FireworkStartingTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (fireworkStartingTransform_ != null) hash ^= FireworkStartingTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (fireworkStartingTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FireworkStartingTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (fireworkStartingTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FireworkStartingTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseFireworkItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.fireworkStartingTransform_ != null) {
        if (fireworkStartingTransform_ == null) {
          FireworkStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        FireworkStartingTransform.MergeFrom(other.FireworkStartingTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (fireworkStartingTransform_ == null) {
              FireworkStartingTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(FireworkStartingTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseInvisibleItem : pb::IMessage<CDS_UseInvisibleItem> {
    private static readonly pb::MessageParser<CDS_UseInvisibleItem> _parser = new pb::MessageParser<CDS_UseInvisibleItem>(() => new CDS_UseInvisibleItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseInvisibleItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseInvisibleItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseInvisibleItem(CDS_UseInvisibleItem other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseInvisibleItem Clone() {
      return new CDS_UseInvisibleItem(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseInvisibleItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseInvisibleItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseInvisibleItem other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseInvisibleItem : pb::IMessage<DSC_UseInvisibleItem> {
    private static readonly pb::MessageParser<DSC_UseInvisibleItem> _parser = new pb::MessageParser<DSC_UseInvisibleItem>(() => new DSC_UseInvisibleItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseInvisibleItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseInvisibleItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseInvisibleItem(DSC_UseInvisibleItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseInvisibleItem Clone() {
      return new DSC_UseInvisibleItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseInvisibleItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseInvisibleItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseInvisibleItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseTrapItem : pb::IMessage<CDS_UseTrapItem> {
    private static readonly pb::MessageParser<CDS_UseTrapItem> _parser = new pb::MessageParser<CDS_UseTrapItem>(() => new CDS_UseTrapItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseTrapItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseTrapItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseTrapItem(CDS_UseTrapItem other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      itemId_ = other.itemId_;
      trapTransform_ = other.trapTransform_ != null ? other.trapTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseTrapItem Clone() {
      return new CDS_UseTrapItem(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "trapTransform" field.</summary>
    public const int TrapTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo trapTransform_;
    /// <summary>
    ///트랩 설치 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo TrapTransform {
      get { return trapTransform_; }
      set {
        trapTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseTrapItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseTrapItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(TrapTransform, other.TrapTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (trapTransform_ != null) hash ^= TrapTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (trapTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TrapTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (trapTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrapTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseTrapItem other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.trapTransform_ != null) {
        if (trapTransform_ == null) {
          TrapTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        TrapTransform.MergeFrom(other.TrapTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (trapTransform_ == null) {
              TrapTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(TrapTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseTrapItem : pb::IMessage<DSC_UseTrapItem> {
    private static readonly pb::MessageParser<DSC_UseTrapItem> _parser = new pb::MessageParser<DSC_UseTrapItem>(() => new DSC_UseTrapItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseTrapItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseTrapItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseTrapItem(DSC_UseTrapItem other) : this() {
      playerId_ = other.playerId_;
      itemId_ = other.itemId_;
      trapTransform_ = other.trapTransform_ != null ? other.trapTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseTrapItem Clone() {
      return new DSC_UseTrapItem(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "trapTransform" field.</summary>
    public const int TrapTransformFieldNumber = 3;
    private global::Google.Protobuf.Protocol.TransformInfo trapTransform_;
    /// <summary>
    ///트랩 설치 위치
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.TransformInfo TrapTransform {
      get { return trapTransform_; }
      set {
        trapTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseTrapItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseTrapItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(TrapTransform, other.TrapTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (trapTransform_ != null) hash ^= TrapTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (trapTransform_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TrapTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (trapTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrapTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseTrapItem other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.trapTransform_ != null) {
        if (trapTransform_ == null) {
          TrapTransform = new global::Google.Protobuf.Protocol.TransformInfo();
        }
        TrapTransform.MergeFrom(other.TrapTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
          case 26: {
            if (trapTransform_ == null) {
              TrapTransform = new global::Google.Protobuf.Protocol.TransformInfo();
            }
            input.ReadMessage(TrapTransform);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseHeartlessSkill : pb::IMessage<CDS_UseHeartlessSkill> {
    private static readonly pb::MessageParser<CDS_UseHeartlessSkill> _parser = new pb::MessageParser<CDS_UseHeartlessSkill>(() => new CDS_UseHeartlessSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseHeartlessSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseHeartlessSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseHeartlessSkill(CDS_UseHeartlessSkill other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      killerId_ = other.killerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseHeartlessSkill Clone() {
      return new CDS_UseHeartlessSkill(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "killerId" field.</summary>
    public const int KillerIdFieldNumber = 2;
    private int killerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerId {
      get { return killerId_; }
      set {
        killerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseHeartlessSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseHeartlessSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (KillerId != other.KillerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (KillerId != 0) hash ^= KillerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (KillerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KillerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (KillerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseHeartlessSkill other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.KillerId != 0) {
        KillerId = other.KillerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            KillerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseHeartlessSkill : pb::IMessage<DSC_UseHeartlessSkill> {
    private static readonly pb::MessageParser<DSC_UseHeartlessSkill> _parser = new pb::MessageParser<DSC_UseHeartlessSkill>(() => new DSC_UseHeartlessSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseHeartlessSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseHeartlessSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseHeartlessSkill(DSC_UseHeartlessSkill other) : this() {
      playerId_ = other.playerId_;
      killerId_ = other.killerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseHeartlessSkill Clone() {
      return new DSC_UseHeartlessSkill(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "killerId" field.</summary>
    public const int KillerIdFieldNumber = 2;
    private int killerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerId {
      get { return killerId_; }
      set {
        killerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseHeartlessSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseHeartlessSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (KillerId != other.KillerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (KillerId != 0) hash ^= KillerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (KillerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KillerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (KillerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseHeartlessSkill other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.KillerId != 0) {
        KillerId = other.KillerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            KillerId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDS_UseDetectorSkill : pb::IMessage<CDS_UseDetectorSkill> {
    private static readonly pb::MessageParser<CDS_UseDetectorSkill> _parser = new pb::MessageParser<CDS_UseDetectorSkill>(() => new CDS_UseDetectorSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDS_UseDetectorSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDetectorSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDetectorSkill(CDS_UseDetectorSkill other) : this() {
      myDediplayerId_ = other.myDediplayerId_;
      killerId_ = other.killerId_;
      detectedPlayerIds_ = other.detectedPlayerIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDS_UseDetectorSkill Clone() {
      return new CDS_UseDetectorSkill(this);
    }

    /// <summary>Field number for the "myDediplayerId" field.</summary>
    public const int MyDediplayerIdFieldNumber = 1;
    private int myDediplayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MyDediplayerId {
      get { return myDediplayerId_; }
      set {
        myDediplayerId_ = value;
      }
    }

    /// <summary>Field number for the "killerId" field.</summary>
    public const int KillerIdFieldNumber = 2;
    private int killerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerId {
      get { return killerId_; }
      set {
        killerId_ = value;
      }
    }

    /// <summary>Field number for the "detectedPlayerIds" field.</summary>
    public const int DetectedPlayerIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_detectedPlayerIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> detectedPlayerIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DetectedPlayerIds {
      get { return detectedPlayerIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDS_UseDetectorSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDS_UseDetectorSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MyDediplayerId != other.MyDediplayerId) return false;
      if (KillerId != other.KillerId) return false;
      if(!detectedPlayerIds_.Equals(other.detectedPlayerIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MyDediplayerId != 0) hash ^= MyDediplayerId.GetHashCode();
      if (KillerId != 0) hash ^= KillerId.GetHashCode();
      hash ^= detectedPlayerIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MyDediplayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MyDediplayerId);
      }
      if (KillerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KillerId);
      }
      detectedPlayerIds_.WriteTo(output, _repeated_detectedPlayerIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MyDediplayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MyDediplayerId);
      }
      if (KillerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerId);
      }
      size += detectedPlayerIds_.CalculateSize(_repeated_detectedPlayerIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDS_UseDetectorSkill other) {
      if (other == null) {
        return;
      }
      if (other.MyDediplayerId != 0) {
        MyDediplayerId = other.MyDediplayerId;
      }
      if (other.KillerId != 0) {
        KillerId = other.KillerId;
      }
      detectedPlayerIds_.Add(other.detectedPlayerIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MyDediplayerId = input.ReadInt32();
            break;
          }
          case 16: {
            KillerId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            detectedPlayerIds_.AddEntriesFrom(input, _repeated_detectedPlayerIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_UseDetectorSkill : pb::IMessage<DSC_UseDetectorSkill> {
    private static readonly pb::MessageParser<DSC_UseDetectorSkill> _parser = new pb::MessageParser<DSC_UseDetectorSkill>(() => new DSC_UseDetectorSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_UseDetectorSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDetectorSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDetectorSkill(DSC_UseDetectorSkill other) : this() {
      playerId_ = other.playerId_;
      killerId_ = other.killerId_;
      detectedPlayerIds_ = other.detectedPlayerIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_UseDetectorSkill Clone() {
      return new DSC_UseDetectorSkill(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "killerId" field.</summary>
    public const int KillerIdFieldNumber = 2;
    private int killerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillerId {
      get { return killerId_; }
      set {
        killerId_ = value;
      }
    }

    /// <summary>Field number for the "detectedPlayerIds" field.</summary>
    public const int DetectedPlayerIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_detectedPlayerIds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> detectedPlayerIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DetectedPlayerIds {
      get { return detectedPlayerIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_UseDetectorSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_UseDetectorSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (KillerId != other.KillerId) return false;
      if(!detectedPlayerIds_.Equals(other.detectedPlayerIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (KillerId != 0) hash ^= KillerId.GetHashCode();
      hash ^= detectedPlayerIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (KillerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KillerId);
      }
      detectedPlayerIds_.WriteTo(output, _repeated_detectedPlayerIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (KillerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerId);
      }
      size += detectedPlayerIds_.CalculateSize(_repeated_detectedPlayerIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_UseDetectorSkill other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.KillerId != 0) {
        KillerId = other.KillerId;
      }
      detectedPlayerIds_.Add(other.detectedPlayerIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            KillerId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            detectedPlayerIds_.AddEntriesFrom(input, _repeated_detectedPlayerIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DSC_EndGame : pb::IMessage<DSC_EndGame> {
    private static readonly pb::MessageParser<DSC_EndGame> _parser = new pb::MessageParser<DSC_EndGame>(() => new DSC_EndGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DSC_EndGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndGame(DSC_EndGame other) : this() {
      winnerPlayerId_ = other.winnerPlayerId_;
      winnerName_ = other.winnerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DSC_EndGame Clone() {
      return new DSC_EndGame(this);
    }

    /// <summary>Field number for the "winnerPlayerId" field.</summary>
    public const int WinnerPlayerIdFieldNumber = 1;
    private int winnerPlayerId_;
    /// <summary>
    ///승자 플레이어의 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinnerPlayerId {
      get { return winnerPlayerId_; }
      set {
        winnerPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "winnerName" field.</summary>
    public const int WinnerNameFieldNumber = 2;
    private string winnerName_ = "";
    /// <summary>
    ///승자 플레이어의 이름
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WinnerName {
      get { return winnerName_; }
      set {
        winnerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DSC_EndGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DSC_EndGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WinnerPlayerId != other.WinnerPlayerId) return false;
      if (WinnerName != other.WinnerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WinnerPlayerId != 0) hash ^= WinnerPlayerId.GetHashCode();
      if (WinnerName.Length != 0) hash ^= WinnerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WinnerPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WinnerPlayerId);
      }
      if (WinnerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WinnerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WinnerPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinnerPlayerId);
      }
      if (WinnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WinnerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DSC_EndGame other) {
      if (other == null) {
        return;
      }
      if (other.WinnerPlayerId != 0) {
        WinnerPlayerId = other.WinnerPlayerId;
      }
      if (other.WinnerName.Length != 0) {
        WinnerName = other.WinnerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WinnerPlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            WinnerName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
